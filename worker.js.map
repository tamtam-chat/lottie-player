{"version":3,"file":"worker.js","sources":["src/rlottie-wasm.wasm?url","src/rlottie-wasm.js","src/worker.ts"],"sourcesContent":["export default \"__VITE_ASSET__7c566ef1__\"","import wasmBinaryFile from './rlottie-wasm.wasm?url';\n\nvar Module = typeof Module != \"undefined\" ? Module : {};\nvar moduleOverrides = Object.assign({}, Module);\nvar arguments_ = [];\nvar thisProgram = \"./this.program\";\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\nvar scriptDirectory = \"\";\n\nvar readBinary, setWindowTitle;\n\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n    if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href\n    } else if (typeof document != \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src\n    }\n    if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1)\n    } else {\n        scriptDirectory = \"\"\n    } {\n        if (ENVIRONMENT_IS_WORKER) {\n            readBinary = url => {\n                var xhr = new XMLHttpRequest;\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response)\n            }\n        }\n    }\n    setWindowTitle = title => document.title = title\n} else {}\nvar out = console.log.bind(console);\nvar err = console.warn.bind(console);\nObject.assign(Module, moduleOverrides);\nmoduleOverrides = null;\nvar POINTER_SIZE = 4;\nvar wasmBinary;\nvar noExitRuntime = true;\nif (typeof WebAssembly != \"object\") {\n    abort(\"no native wasm support detected\")\n}\nvar wasmMemory;\nvar ABORT = false;\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n    if (!condition) {\n        abort(text)\n    }\n}\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n    var endIdx = idx + maxBytesToRead;\n    var endPtr = idx;\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n    if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr))\n    }\n    var str = \"\";\n    while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 128)) {\n            str += String.fromCharCode(u0);\n            continue\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 224) == 192) {\n            str += String.fromCharCode((u0 & 31) << 6 | u1);\n            continue\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 240) == 224) {\n            u0 = (u0 & 15) << 12 | u1 << 6 | u2\n        } else {\n            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63\n        }\n        if (u0 < 65536) {\n            str += String.fromCharCode(u0)\n        } else {\n            var ch = u0 - 65536;\n            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\n        }\n    }\n    return str\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n    return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\"\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n    if (!(maxBytesToWrite > 0)) return 0;\n    var startIdx = outIdx;\n    var endIdx = outIdx + maxBytesToWrite - 1;\n    for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n            var u1 = str.charCodeAt(++i);\n            u = 65536 + ((u & 1023) << 10) | u1 & 1023\n        }\n        if (u <= 127) {\n            if (outIdx >= endIdx) break;\n            heap[outIdx++] = u\n        } else if (u <= 2047) {\n            if (outIdx + 1 >= endIdx) break;\n            heap[outIdx++] = 192 | u >> 6;\n            heap[outIdx++] = 128 | u & 63\n        } else if (u <= 65535) {\n            if (outIdx + 2 >= endIdx) break;\n            heap[outIdx++] = 224 | u >> 12;\n            heap[outIdx++] = 128 | u >> 6 & 63;\n            heap[outIdx++] = 128 | u & 63\n        } else {\n            if (outIdx + 3 >= endIdx) break;\n            heap[outIdx++] = 240 | u >> 18;\n            heap[outIdx++] = 128 | u >> 12 & 63;\n            heap[outIdx++] = 128 | u >> 6 & 63;\n            heap[outIdx++] = 128 | u & 63\n        }\n    }\n    heap[outIdx] = 0;\n    return outIdx - startIdx\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n    return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite)\n}\n\nfunction lengthBytesUTF8(str) {\n    var len = 0;\n    for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 127) {\n            len++\n        } else if (c <= 2047) {\n            len += 2\n        } else if (c >= 55296 && c <= 57343) {\n            len += 4;\n            ++i\n        } else {\n            len += 3\n        }\n    }\n    return len\n}\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n    buffer = buf;\n    Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n    Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n    Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n    Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n    Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n    Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n    Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n    Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf)\n}\nvar INITIAL_MEMORY = 16777216;\nvar wasmTable;\nvar __ATPRERUN__ = [];\nvar __ATINIT__ = [];\nvar __ATPOSTRUN__ = [];\nvar runtimeInitialized = false;\n\nfunction preRun() {\n    callRuntimeCallbacks(__ATPRERUN__)\n}\n\nfunction initRuntime() {\n    runtimeInitialized = true;\n    callRuntimeCallbacks(__ATINIT__)\n}\n\nfunction postRun() {\n    callRuntimeCallbacks(__ATPOSTRUN__)\n}\n\nfunction addOnInit(cb) {\n    __ATINIT__.unshift(cb)\n}\n\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null;\n\nfunction addRunDependency(id) {\n    runDependencies++;\n}\n\nfunction removeRunDependency(id) {\n    runDependencies--;\n    if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n            clearInterval(runDependencyWatcher);\n            runDependencyWatcher = null\n        }\n        if (dependenciesFulfilled) {\n            var callback = dependenciesFulfilled;\n            dependenciesFulfilled = null;\n            callback()\n        }\n    }\n}\n\nfunction abort(what) {\n    if (Module[\"onAbort\"]) {\n        Module[\"onAbort\"](what)\n    }\n    what = \"Aborted(\" + what + \")\";\n    err(what);\n    ABORT = true;\n    EXITSTATUS = 1;\n    what += \". Build with -sASSERTIONS for more info.\";\n    var e = new WebAssembly.RuntimeError(what);\n    throw e\n}\nvar dataURIPrefix = \"data:application/wasm;base64\";\n\nfunction isDataURI(filename) {\n    return filename.startsWith(dataURIPrefix)\n}\n\nfunction isFileURI(filename) {\n    return filename.startsWith(\"file://\")\n}\n\nfunction getBinary(file) {\n    try {\n        if (file == wasmBinaryFile && wasmBinary) {\n            return new Uint8Array(wasmBinary)\n        }\n        if (readBinary) {\n            return readBinary(file)\n        }\n        throw \"both async and sync fetching of the wasm failed\"\n    } catch (err) {\n        abort(err)\n    }\n}\n\nfunction getBinaryPromise() {\n    if (!wasmBinary) {\n        if (typeof fetch == \"function\" && !isFileURI(wasmBinaryFile)) {\n            return fetch(wasmBinaryFile, {\n                credentials: \"same-origin\"\n            }).then(function(response) {\n                if (!response[\"ok\"]) {\n                    throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                }\n                return response[\"arrayBuffer\"]()\n            }).catch(function() {\n                return getBinary(wasmBinaryFile)\n            })\n        }\n    }\n    return Promise.resolve().then(function() {\n        return getBinary(wasmBinaryFile)\n    })\n}\n\nfunction createWasm() {\n    var info = {\n        \"env\": asmLibraryArg,\n        \"wasi_snapshot_preview1\": asmLibraryArg\n    };\n\n    function receiveInstance(instance, module) {\n        var exports = instance.exports;\n        Module[\"asm\"] = exports;\n        wasmMemory = Module[\"asm\"][\"memory\"];\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n        addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n        removeRunDependency(\"wasm-instantiate\")\n    }\n    addRunDependency(\"wasm-instantiate\");\n\n    function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"])\n    }\n\n    function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise().then(function(binary) {\n            return WebAssembly.instantiate(binary, info)\n        }).then(function(instance) {\n            return instance\n        }).then(receiver, function(reason) {\n            err(\"failed to asynchronously prepare wasm: \" + reason);\n            abort(reason)\n        })\n    }\n\n    function instantiateAsync() {\n        if (!wasmBinary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch == \"function\") {\n            return fetch(wasmBinaryFile, {\n                credentials: \"same-origin\"\n            }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiationResult, function(reason) {\n                    err(\"wasm streaming compile failed: \" + reason);\n                    err(\"falling back to ArrayBuffer instantiation\");\n                    return instantiateArrayBuffer(receiveInstantiationResult)\n                })\n            })\n        } else {\n            return instantiateArrayBuffer(receiveInstantiationResult)\n        }\n    }\n    instantiateAsync();\n    return {}\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n    while (callbacks.length > 0) {\n        callbacks.shift()(Module)\n    }\n}\n\nfunction ___assert_fail(condition, filename, line, func) {\n    abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"])\n}\n\nfunction ___cxa_allocate_exception(size) {\n    return _malloc(size + 24) + 24\n}\n\nfunction ExceptionInfo(excPtr) {\n    this.excPtr = excPtr;\n    this.ptr = excPtr - 24;\n    this.set_type = function(type) {\n        HEAPU32[this.ptr + 4 >> 2] = type\n    };\n    this.get_type = function() {\n        return HEAPU32[this.ptr + 4 >> 2]\n    };\n    this.set_destructor = function(destructor) {\n        HEAPU32[this.ptr + 8 >> 2] = destructor\n    };\n    this.get_destructor = function() {\n        return HEAPU32[this.ptr + 8 >> 2]\n    };\n    this.set_refcount = function(refcount) {\n        HEAP32[this.ptr >> 2] = refcount\n    };\n    this.set_caught = function(caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[this.ptr + 12 >> 0] = caught\n    };\n    this.get_caught = function() {\n        return HEAP8[this.ptr + 12 >> 0] != 0\n    };\n    this.set_rethrown = function(rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[this.ptr + 13 >> 0] = rethrown\n    };\n    this.get_rethrown = function() {\n        return HEAP8[this.ptr + 13 >> 0] != 0\n    };\n    this.init = function(type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n        this.set_refcount(0);\n        this.set_caught(false);\n        this.set_rethrown(false)\n    };\n    this.add_ref = function() {\n        var value = HEAP32[this.ptr >> 2];\n        HEAP32[this.ptr >> 2] = value + 1\n    };\n    this.release_ref = function() {\n        var prev = HEAP32[this.ptr >> 2];\n        HEAP32[this.ptr >> 2] = prev - 1;\n        return prev === 1\n    };\n    this.set_adjusted_ptr = function(adjustedPtr) {\n        HEAPU32[this.ptr + 16 >> 2] = adjustedPtr\n    };\n    this.get_adjusted_ptr = function() {\n        return HEAPU32[this.ptr + 16 >> 2]\n    };\n    this.get_exception_ptr = function() {\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n            return HEAPU32[this.excPtr >> 2]\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr\n    }\n}\nvar exceptionLast = 0;\nvar uncaughtExceptionCount = 0;\n\nfunction ___cxa_throw(ptr, type, destructor) {\n    var info = new ExceptionInfo(ptr);\n    info.init(type, destructor);\n    exceptionLast = ptr;\n    uncaughtExceptionCount++;\n    throw ptr\n}\nvar SYSCALLS = {\n    varargs: undefined,\n    get: function() {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n        return ret\n    },\n    getStr: function(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret\n    }\n};\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n    SYSCALLS.varargs = varargs;\n    return 0\n}\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n    SYSCALLS.varargs = varargs\n}\n\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n\nfunction getShiftFromSize(size) {\n    switch (size) {\n        case 1:\n            return 0;\n        case 2:\n            return 1;\n        case 4:\n            return 2;\n        case 8:\n            return 3;\n        default:\n            throw new TypeError(\"Unknown type size: \" + size)\n    }\n}\n\nfunction embind_init_charCodes() {\n    var codes = new Array(256);\n    for (var i = 0; i < 256; ++i) {\n        codes[i] = String.fromCharCode(i)\n    }\n    embind_charCodes = codes\n}\nvar embind_charCodes = undefined;\n\nfunction readLatin1String(ptr) {\n    var ret = \"\";\n    var c = ptr;\n    while (HEAPU8[c]) {\n        ret += embind_charCodes[HEAPU8[c++]]\n    }\n    return ret\n}\nvar awaitingDependencies = {};\nvar registeredTypes = {};\nvar typeDependencies = {};\nvar char_0 = 48;\nvar char_9 = 57;\n\nfunction makeLegalFunctionName(name) {\n    if (undefined === name) {\n        return \"_unknown\"\n    }\n    name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n    var f = name.charCodeAt(0);\n    if (f >= char_0 && f <= char_9) {\n        return \"_\" + name\n    }\n    return name\n}\n\nfunction createNamedFunction(name, body) {\n    name = makeLegalFunctionName(name);\n    return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body)\n}\n\nfunction extendError(baseErrorType, errorName) {\n    var errorClass = createNamedFunction(errorName, function(message) {\n        this.name = errorName;\n        this.message = message;\n        var stack = new Error(message).stack;\n        if (stack !== undefined) {\n            this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\")\n        }\n    });\n    errorClass.prototype = Object.create(baseErrorType.prototype);\n    errorClass.prototype.constructor = errorClass;\n    errorClass.prototype.toString = function() {\n        if (this.message === undefined) {\n            return this.name\n        } else {\n            return this.name + \": \" + this.message\n        }\n    };\n    return errorClass\n}\nvar BindingError = undefined;\n\nfunction throwBindingError(message) {\n    throw new BindingError(message)\n}\nvar InternalError = undefined;\n\nfunction throwInternalError(message) {\n    throw new InternalError(message)\n}\n\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n    myTypes.forEach(function(type) {\n        typeDependencies[type] = dependentTypes\n    });\n\n    function onComplete(typeConverters) {\n        var myTypeConverters = getTypeConverters(typeConverters);\n        if (myTypeConverters.length !== myTypes.length) {\n            throwInternalError(\"Mismatched type converter count\")\n        }\n        for (var i = 0; i < myTypes.length; ++i) {\n            registerType(myTypes[i], myTypeConverters[i])\n        }\n    }\n    var typeConverters = new Array(dependentTypes.length);\n    var unregisteredTypes = [];\n    var registered = 0;\n    dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n            typeConverters[i] = registeredTypes[dt]\n        } else {\n            unregisteredTypes.push(dt);\n            if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = []\n            }\n            awaitingDependencies[dt].push(() => {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                    onComplete(typeConverters)\n                }\n            })\n        }\n    });\n    if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters)\n    }\n}\n\nfunction registerType(rawType, registeredInstance, options = {}) {\n    if (!(\"argPackAdvance\" in registeredInstance)) {\n        throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")\n    }\n    var name = registeredInstance.name;\n    if (!rawType) {\n        throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer')\n    }\n    if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n            return\n        } else {\n            throwBindingError(\"Cannot register type '\" + name + \"' twice\")\n        }\n    }\n    registeredTypes[rawType] = registeredInstance;\n    delete typeDependencies[rawType];\n    if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach(cb => cb())\n    }\n}\n\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n    var shift = getShiftFromSize(size);\n    name = readLatin1String(name);\n    registerType(rawType, {\n        name: name,\n        \"fromWireType\": function(wt) {\n            return !!wt\n        },\n        \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n                heap = HEAP8\n            } else if (size === 2) {\n                heap = HEAP16\n            } else if (size === 4) {\n                heap = HEAP32\n            } else {\n                throw new TypeError(\"Unknown boolean type size: \" + name)\n            }\n            return this[\"fromWireType\"](heap[pointer >> shift])\n        },\n        destructorFunction: null\n    })\n}\n\nfunction ClassHandle_isAliasOf(other) {\n    if (!(this instanceof ClassHandle)) {\n        return false\n    }\n    if (!(other instanceof ClassHandle)) {\n        return false\n    }\n    var leftClass = this.$$.ptrType.registeredClass;\n    var left = this.$$.ptr;\n    var rightClass = other.$$.ptrType.registeredClass;\n    var right = other.$$.ptr;\n    while (leftClass.baseClass) {\n        left = leftClass.upcast(left);\n        leftClass = leftClass.baseClass\n    }\n    while (rightClass.baseClass) {\n        right = rightClass.upcast(right);\n        rightClass = rightClass.baseClass\n    }\n    return leftClass === rightClass && left === right\n}\n\nfunction shallowCopyInternalPointer(o) {\n    return {\n        count: o.count,\n        deleteScheduled: o.deleteScheduled,\n        preservePointerOnDelete: o.preservePointerOnDelete,\n        ptr: o.ptr,\n        ptrType: o.ptrType,\n        smartPtr: o.smartPtr,\n        smartPtrType: o.smartPtrType\n    }\n}\n\nfunction throwInstanceAlreadyDeleted(obj) {\n    function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name\n    }\n    throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\")\n}\nvar finalizationRegistry = false;\n\nfunction detachFinalizer(handle) {}\n\nfunction runDestructor($$) {\n    if ($$.smartPtr) {\n        $$.smartPtrType.rawDestructor($$.smartPtr)\n    } else {\n        $$.ptrType.registeredClass.rawDestructor($$.ptr)\n    }\n}\n\nfunction releaseClassHandle($$) {\n    $$.count.value -= 1;\n    var toDelete = 0 === $$.count.value;\n    if (toDelete) {\n        runDestructor($$)\n    }\n}\n\nfunction downcastPointer(ptr, ptrClass, desiredClass) {\n    if (ptrClass === desiredClass) {\n        return ptr\n    }\n    if (undefined === desiredClass.baseClass) {\n        return null\n    }\n    var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n    if (rv === null) {\n        return null\n    }\n    return desiredClass.downcast(rv)\n}\nvar registeredPointers = {};\n\nfunction getInheritedInstanceCount() {\n    return Object.keys(registeredInstances).length\n}\n\nfunction getLiveInheritedInstances() {\n    var rv = [];\n    for (var k in registeredInstances) {\n        if (registeredInstances.hasOwnProperty(k)) {\n            rv.push(registeredInstances[k])\n        }\n    }\n    return rv\n}\nvar deletionQueue = [];\n\nfunction flushPendingDeletes() {\n    while (deletionQueue.length) {\n        var obj = deletionQueue.pop();\n        obj.$$.deleteScheduled = false;\n        obj[\"delete\"]()\n    }\n}\nvar delayFunction = undefined;\n\nfunction setDelayFunction(fn) {\n    delayFunction = fn;\n    if (deletionQueue.length && delayFunction) {\n        delayFunction(flushPendingDeletes)\n    }\n}\n\nfunction init_embind() {\n    Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n    Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n    Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n    Module[\"setDelayFunction\"] = setDelayFunction\n}\nvar registeredInstances = {};\n\nfunction getBasestPointer(class_, ptr) {\n    if (ptr === undefined) {\n        throwBindingError(\"ptr should not be undefined\")\n    }\n    while (class_.baseClass) {\n        ptr = class_.upcast(ptr);\n        class_ = class_.baseClass\n    }\n    return ptr\n}\n\nfunction getInheritedInstance(class_, ptr) {\n    ptr = getBasestPointer(class_, ptr);\n    return registeredInstances[ptr]\n}\n\nfunction makeClassHandle(prototype, record) {\n    if (!record.ptrType || !record.ptr) {\n        throwInternalError(\"makeClassHandle requires ptr and ptrType\")\n    }\n    var hasSmartPtrType = !!record.smartPtrType;\n    var hasSmartPtr = !!record.smartPtr;\n    if (hasSmartPtrType !== hasSmartPtr) {\n        throwInternalError(\"Both smartPtrType and smartPtr must be specified\")\n    }\n    record.count = {\n        value: 1\n    };\n    return attachFinalizer(Object.create(prototype, {\n        $$: {\n            value: record\n        }\n    }))\n}\n\nfunction RegisteredPointer_fromWireType(ptr) {\n    var rawPointer = this.getPointee(ptr);\n    if (!rawPointer) {\n        this.destructor(ptr);\n        return null\n    }\n    var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n    if (undefined !== registeredInstance) {\n        if (0 === registeredInstance.$$.count.value) {\n            registeredInstance.$$.ptr = rawPointer;\n            registeredInstance.$$.smartPtr = ptr;\n            return registeredInstance[\"clone\"]()\n        } else {\n            var rv = registeredInstance[\"clone\"]();\n            this.destructor(ptr);\n            return rv\n        }\n    }\n\n    function makeDefaultHandle() {\n        if (this.isSmartPointer) {\n            return makeClassHandle(this.registeredClass.instancePrototype, {\n                ptrType: this.pointeeType,\n                ptr: rawPointer,\n                smartPtrType: this,\n                smartPtr: ptr\n            })\n        } else {\n            return makeClassHandle(this.registeredClass.instancePrototype, {\n                ptrType: this,\n                ptr: ptr\n            })\n        }\n    }\n    var actualType = this.registeredClass.getActualType(rawPointer);\n    var registeredPointerRecord = registeredPointers[actualType];\n    if (!registeredPointerRecord) {\n        return makeDefaultHandle.call(this)\n    }\n    var toType;\n    if (this.isConst) {\n        toType = registeredPointerRecord.constPointerType\n    } else {\n        toType = registeredPointerRecord.pointerType\n    }\n    var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n    if (dp === null) {\n        return makeDefaultHandle.call(this)\n    }\n    if (this.isSmartPointer) {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n            ptrType: toType,\n            ptr: dp,\n            smartPtrType: this,\n            smartPtr: ptr\n        })\n    } else {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n            ptrType: toType,\n            ptr: dp\n        })\n    }\n}\n\nfunction attachFinalizer(handle) {\n    if (\"undefined\" === typeof FinalizationRegistry) {\n        attachFinalizer = handle => handle;\n        return handle\n    }\n    finalizationRegistry = new FinalizationRegistry(info => {\n        releaseClassHandle(info.$$)\n    });\n    attachFinalizer = handle => {\n        var $$ = handle.$$;\n        var hasSmartPtr = !!$$.smartPtr;\n        if (hasSmartPtr) {\n            var info = {\n                $$: $$\n            };\n            finalizationRegistry.register(handle, info, handle)\n        }\n        return handle\n    };\n    detachFinalizer = handle => finalizationRegistry.unregister(handle);\n    return attachFinalizer(handle)\n}\n\nfunction ClassHandle_clone() {\n    if (!this.$$.ptr) {\n        throwInstanceAlreadyDeleted(this)\n    }\n    if (this.$$.preservePointerOnDelete) {\n        this.$$.count.value += 1;\n        return this\n    } else {\n        var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n            $$: {\n                value: shallowCopyInternalPointer(this.$$)\n            }\n        }));\n        clone.$$.count.value += 1;\n        clone.$$.deleteScheduled = false;\n        return clone\n    }\n}\n\nfunction ClassHandle_delete() {\n    if (!this.$$.ptr) {\n        throwInstanceAlreadyDeleted(this)\n    }\n    if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n        throwBindingError(\"Object already scheduled for deletion\")\n    }\n    detachFinalizer(this);\n    releaseClassHandle(this.$$);\n    if (!this.$$.preservePointerOnDelete) {\n        this.$$.smartPtr = undefined;\n        this.$$.ptr = undefined\n    }\n}\n\nfunction ClassHandle_isDeleted() {\n    return !this.$$.ptr\n}\n\nfunction ClassHandle_deleteLater() {\n    if (!this.$$.ptr) {\n        throwInstanceAlreadyDeleted(this)\n    }\n    if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n        throwBindingError(\"Object already scheduled for deletion\")\n    }\n    deletionQueue.push(this);\n    if (deletionQueue.length === 1 && delayFunction) {\n        delayFunction(flushPendingDeletes)\n    }\n    this.$$.deleteScheduled = true;\n    return this\n}\n\nfunction init_ClassHandle() {\n    ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n    ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n    ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n    ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n    ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater\n}\n\nfunction ClassHandle() {}\n\nfunction ensureOverloadTable(proto, methodName, humanName) {\n    if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        proto[methodName] = function() {\n            if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\")\n            }\n            return proto[methodName].overloadTable[arguments.length].apply(this, arguments)\n        };\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc\n    }\n}\n\nfunction exposePublicSymbol(name, value, numArguments) {\n    if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n            throwBindingError(\"Cannot register public name '\" + name + \"' twice\")\n        }\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n            throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\")\n        }\n        Module[name].overloadTable[numArguments] = value\n    } else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n            Module[name].numArguments = numArguments\n        }\n    }\n}\n\nfunction RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n    this.name = name;\n    this.constructor = constructor;\n    this.instancePrototype = instancePrototype;\n    this.rawDestructor = rawDestructor;\n    this.baseClass = baseClass;\n    this.getActualType = getActualType;\n    this.upcast = upcast;\n    this.downcast = downcast;\n    this.pureVirtualFunctions = []\n}\n\nfunction upcastPointer(ptr, ptrClass, desiredClass) {\n    while (ptrClass !== desiredClass) {\n        if (!ptrClass.upcast) {\n            throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name)\n        }\n        ptr = ptrClass.upcast(ptr);\n        ptrClass = ptrClass.baseClass\n    }\n    return ptr\n}\n\nfunction constNoSmartPtrRawPointerToWireType(destructors, handle) {\n    if (handle === null) {\n        if (this.isReference) {\n            throwBindingError(\"null is not a valid \" + this.name)\n        }\n        return 0\n    }\n    if (!handle.$$) {\n        throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name)\n    }\n    if (!handle.$$.ptr) {\n        throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name)\n    }\n    var handleClass = handle.$$.ptrType.registeredClass;\n    var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n    return ptr\n}\n\nfunction genericPointerToWireType(destructors, handle) {\n    var ptr;\n    if (handle === null) {\n        if (this.isReference) {\n            throwBindingError(\"null is not a valid \" + this.name)\n        }\n        if (this.isSmartPointer) {\n            ptr = this.rawConstructor();\n            if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr)\n            }\n            return ptr\n        } else {\n            return 0\n        }\n    }\n    if (!handle.$$) {\n        throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name)\n    }\n    if (!handle.$$.ptr) {\n        throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name)\n    }\n    if (!this.isConst && handle.$$.ptrType.isConst) {\n        throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name)\n    }\n    var handleClass = handle.$$.ptrType.registeredClass;\n    ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n    if (this.isSmartPointer) {\n        if (undefined === handle.$$.smartPtr) {\n            throwBindingError(\"Passing raw pointer to smart pointer is illegal\")\n        }\n        switch (this.sharingPolicy) {\n            case 0:\n                if (handle.$$.smartPtrType === this) {\n                    ptr = handle.$$.smartPtr\n                } else {\n                    throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name)\n                }\n                break;\n            case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n            case 2:\n                if (handle.$$.smartPtrType === this) {\n                    ptr = handle.$$.smartPtr\n                } else {\n                    var clonedHandle = handle[\"clone\"]();\n                    ptr = this.rawShare(ptr, Emval.toHandle(function() {\n                        clonedHandle[\"delete\"]()\n                    }));\n                    if (destructors !== null) {\n                        destructors.push(this.rawDestructor, ptr)\n                    }\n                }\n                break;\n            default:\n                throwBindingError(\"Unsupporting sharing policy\")\n        }\n    }\n    return ptr\n}\n\nfunction nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n    if (handle === null) {\n        if (this.isReference) {\n            throwBindingError(\"null is not a valid \" + this.name)\n        }\n        return 0\n    }\n    if (!handle.$$) {\n        throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name)\n    }\n    if (!handle.$$.ptr) {\n        throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name)\n    }\n    if (handle.$$.ptrType.isConst) {\n        throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name)\n    }\n    var handleClass = handle.$$.ptrType.registeredClass;\n    var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n    return ptr\n}\n\nfunction simpleReadValueFromPointer(pointer) {\n    return this[\"fromWireType\"](HEAP32[pointer >> 2])\n}\n\nfunction RegisteredPointer_getPointee(ptr) {\n    if (this.rawGetPointee) {\n        ptr = this.rawGetPointee(ptr)\n    }\n    return ptr\n}\n\nfunction RegisteredPointer_destructor(ptr) {\n    if (this.rawDestructor) {\n        this.rawDestructor(ptr)\n    }\n}\n\nfunction RegisteredPointer_deleteObject(handle) {\n    if (handle !== null) {\n        handle[\"delete\"]()\n    }\n}\n\nfunction init_RegisteredPointer() {\n    RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n    RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n    RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n    RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n    RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n    RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType\n}\n\nfunction RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n    this.name = name;\n    this.registeredClass = registeredClass;\n    this.isReference = isReference;\n    this.isConst = isConst;\n    this.isSmartPointer = isSmartPointer;\n    this.pointeeType = pointeeType;\n    this.sharingPolicy = sharingPolicy;\n    this.rawGetPointee = rawGetPointee;\n    this.rawConstructor = rawConstructor;\n    this.rawShare = rawShare;\n    this.rawDestructor = rawDestructor;\n    if (!isSmartPointer && registeredClass.baseClass === undefined) {\n        if (isConst) {\n            this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n            this.destructorFunction = null\n        } else {\n            this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n            this.destructorFunction = null\n        }\n    } else {\n        this[\"toWireType\"] = genericPointerToWireType\n    }\n}\n\nfunction replacePublicSymbol(name, value, numArguments) {\n    if (!Module.hasOwnProperty(name)) {\n        throwInternalError(\"Replacing nonexistant public symbol\")\n    }\n    if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value\n    } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments\n    }\n}\n\nfunction dynCallLegacy(sig, ptr, args) {\n    var f = Module[\"dynCall_\" + sig];\n    return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr)\n}\nvar wasmTableMirror = [];\n\nfunction getWasmTableEntry(funcPtr) {\n    var func = wasmTableMirror[funcPtr];\n    if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr)\n    }\n    return func\n}\n\nfunction dynCall(sig, ptr, args) {\n    if (sig.includes(\"j\")) {\n        return dynCallLegacy(sig, ptr, args)\n    }\n    var rtn = getWasmTableEntry(ptr).apply(null, args);\n    return rtn\n}\n\nfunction getDynCaller(sig, ptr) {\n    var argCache = [];\n    return function() {\n        argCache.length = 0;\n        Object.assign(argCache, arguments);\n        return dynCall(sig, ptr, argCache)\n    }\n}\n\nfunction embind__requireFunction(signature, rawFunction) {\n    signature = readLatin1String(signature);\n\n    function makeDynCaller() {\n        if (signature.includes(\"j\")) {\n            return getDynCaller(signature, rawFunction)\n        }\n        return getWasmTableEntry(rawFunction)\n    }\n    var fp = makeDynCaller();\n    if (typeof fp != \"function\") {\n        throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction)\n    }\n    return fp\n}\nvar UnboundTypeError = undefined;\n\nfunction getTypeName(type) {\n    var ptr = ___getTypeName(type);\n    var rv = readLatin1String(ptr);\n    _free(ptr);\n    return rv\n}\n\nfunction throwUnboundTypeError(message, types) {\n    var unboundTypes = [];\n    var seen = {};\n\n    function visit(type) {\n        if (seen[type]) {\n            return\n        }\n        if (registeredTypes[type]) {\n            return\n        }\n        if (typeDependencies[type]) {\n            typeDependencies[type].forEach(visit);\n            return\n        }\n        unboundTypes.push(type);\n        seen[type] = true\n    }\n    types.forEach(visit);\n    throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]))\n}\n\nfunction __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n    name = readLatin1String(name);\n    getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n    if (upcast) {\n        upcast = embind__requireFunction(upcastSignature, upcast)\n    }\n    if (downcast) {\n        downcast = embind__requireFunction(downcastSignature, downcast)\n    }\n    rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n    var legalFunctionName = makeLegalFunctionName(name);\n    exposePublicSymbol(legalFunctionName, function() {\n        throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [baseClassRawType])\n    });\n    whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n        base = base[0];\n        var baseClass;\n        var basePrototype;\n        if (baseClassRawType) {\n            baseClass = base.registeredClass;\n            basePrototype = baseClass.instancePrototype\n        } else {\n            basePrototype = ClassHandle.prototype\n        }\n        var constructor = createNamedFunction(legalFunctionName, function() {\n            if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name)\n            }\n            if (undefined === registeredClass.constructor_body) {\n                throw new BindingError(name + \" has no accessible constructor\")\n            }\n            var body = registeredClass.constructor_body[arguments.length];\n            if (undefined === body) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\")\n            }\n            return body.apply(this, arguments)\n        });\n        var instancePrototype = Object.create(basePrototype, {\n            constructor: {\n                value: constructor\n            }\n        });\n        constructor.prototype = instancePrototype;\n        var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n        var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n        var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n        var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n        registeredPointers[rawType] = {\n            pointerType: pointerConverter,\n            constPointerType: constPointerConverter\n        };\n        replacePublicSymbol(legalFunctionName, constructor);\n        return [referenceConverter, pointerConverter, constPointerConverter]\n    })\n}\n\nfunction heap32VectorToArray(count, firstElement) {\n    var array = [];\n    for (var i = 0; i < count; i++) {\n        array.push(HEAPU32[firstElement + i * 4 >> 2])\n    }\n    return array\n}\n\nfunction runDestructors(destructors) {\n    while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr)\n    }\n}\n\nfunction new_(constructor, argumentList) {\n    if (!(constructor instanceof Function)) {\n        throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\")\n    }\n    var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n    dummy.prototype = constructor.prototype;\n    var obj = new dummy;\n    var r = constructor.apply(obj, argumentList);\n    return r instanceof Object ? r : obj\n}\n\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n    var argCount = argTypes.length;\n    if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")\n    }\n    var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n    var needsDestructorStack = false;\n    for (var i = 1; i < argTypes.length; ++i) {\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n            needsDestructorStack = true;\n            break\n        }\n    }\n    var returns = argTypes[0].name !== \"void\";\n    var argsList = \"\";\n    var argsListWired = \"\";\n    for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n        argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\"\n    }\n    var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n    if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\"\n    }\n    var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n    var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n    var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n    if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\"\n    }\n    for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n        args1.push(\"argType\" + i);\n        args2.push(argTypes[i + 2])\n    }\n    if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired\n    }\n    invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n    if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\"\n    } else {\n        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n            var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n            if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction)\n            }\n        }\n    }\n    if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\"\n    } else {}\n    invokerFnBody += \"}\\n\";\n    args1.push(invokerFnBody);\n    var invokerFunction = new_(Function, args1).apply(null, args2);\n    return invokerFunction\n}\n\nfunction __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n    assert(argCount > 0);\n    var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n    invoker = embind__requireFunction(invokerSignature, invoker);\n    whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n        classType = classType[0];\n        var humanName = \"constructor \" + classType.name;\n        if (undefined === classType.registeredClass.constructor_body) {\n            classType.registeredClass.constructor_body = []\n        }\n        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n            throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")\n        }\n        classType.registeredClass.constructor_body[argCount - 1] = () => {\n            throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes)\n        };\n        whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n            argTypes.splice(1, 0, null);\n            classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n            return []\n        });\n        return []\n    })\n}\n\nfunction __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n    var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n    methodName = readLatin1String(methodName);\n    rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n    whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n        classType = classType[0];\n        var humanName = classType.name + \".\" + methodName;\n        if (methodName.startsWith(\"@@\")) {\n            methodName = Symbol[methodName.substring(2)]\n        }\n        if (isPureVirtual) {\n            classType.registeredClass.pureVirtualFunctions.push(methodName)\n        }\n\n        function unboundTypesHandler() {\n            throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes)\n        }\n        var proto = classType.registeredClass.instancePrototype;\n        var method = proto[methodName];\n        if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n            unboundTypesHandler.argCount = argCount - 2;\n            unboundTypesHandler.className = classType.name;\n            proto[methodName] = unboundTypesHandler\n        } else {\n            ensureOverloadTable(proto, methodName, humanName);\n            proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler\n        }\n        whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n            var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n            if (undefined === proto[methodName].overloadTable) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction\n            } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction\n            }\n            return []\n        });\n        return []\n    })\n}\nvar emval_free_list = [];\nvar emval_handle_array = [{}, {\n    value: undefined\n}, {\n    value: null\n}, {\n    value: true\n}, {\n    value: false\n}];\n\nfunction __emval_decref(handle) {\n    if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n        emval_handle_array[handle] = undefined;\n        emval_free_list.push(handle)\n    }\n}\n\nfunction count_emval_handles() {\n    var count = 0;\n    for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n            ++count\n        }\n    }\n    return count\n}\n\nfunction get_first_emval() {\n    for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n            return emval_handle_array[i]\n        }\n    }\n    return null\n}\n\nfunction init_emval() {\n    Module[\"count_emval_handles\"] = count_emval_handles;\n    Module[\"get_first_emval\"] = get_first_emval\n}\nvar Emval = {\n    toValue: handle => {\n        if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle)\n        }\n        return emval_handle_array[handle].value\n    },\n    toHandle: value => {\n        switch (value) {\n            case undefined:\n                return 1;\n            case null:\n                return 2;\n            case true:\n                return 3;\n            case false:\n                return 4;\n            default: {\n                var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n                emval_handle_array[handle] = {\n                    refcount: 1,\n                    value: value\n                };\n                return handle\n            }\n        }\n    }\n};\n\nfunction __embind_register_emval(rawType, name) {\n    name = readLatin1String(name);\n    registerType(rawType, {\n        name: name,\n        \"fromWireType\": function(handle) {\n            var rv = Emval.toValue(handle);\n            __emval_decref(handle);\n            return rv\n        },\n        \"toWireType\": function(destructors, value) {\n            return Emval.toHandle(value)\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: null\n    })\n}\n\nfunction embindRepr(v) {\n    if (v === null) {\n        return \"null\"\n    }\n    var t = typeof v;\n    if (t === \"object\" || t === \"array\" || t === \"function\") {\n        return v.toString()\n    } else {\n        return \"\" + v\n    }\n}\n\nfunction floatReadValueFromPointer(name, shift) {\n    switch (shift) {\n        case 2:\n            return function(pointer) {\n                return this[\"fromWireType\"](HEAPF32[pointer >> 2])\n            };\n        case 3:\n            return function(pointer) {\n                return this[\"fromWireType\"](HEAPF64[pointer >> 3])\n            };\n        default:\n            throw new TypeError(\"Unknown float type: \" + name)\n    }\n}\n\nfunction __embind_register_float(rawType, name, size) {\n    var shift = getShiftFromSize(size);\n    name = readLatin1String(name);\n    registerType(rawType, {\n        name: name,\n        \"fromWireType\": function(value) {\n            return value\n        },\n        \"toWireType\": function(destructors, value) {\n            return value\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n        destructorFunction: null\n    })\n}\n\nfunction integerReadValueFromPointer(name, shift, signed) {\n    switch (shift) {\n        case 0:\n            return signed ? function readS8FromPointer(pointer) {\n                return HEAP8[pointer]\n            } : function readU8FromPointer(pointer) {\n                return HEAPU8[pointer]\n            };\n        case 1:\n            return signed ? function readS16FromPointer(pointer) {\n                return HEAP16[pointer >> 1]\n            } : function readU16FromPointer(pointer) {\n                return HEAPU16[pointer >> 1]\n            };\n        case 2:\n            return signed ? function readS32FromPointer(pointer) {\n                return HEAP32[pointer >> 2]\n            } : function readU32FromPointer(pointer) {\n                return HEAPU32[pointer >> 2]\n            };\n        default:\n            throw new TypeError(\"Unknown integer type: \" + name)\n    }\n}\n\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n    name = readLatin1String(name);\n    if (maxRange === -1) {\n        maxRange = 4294967295\n    }\n    var shift = getShiftFromSize(size);\n    var fromWireType = value => value;\n    if (minRange === 0) {\n        var bitshift = 32 - 8 * size;\n        fromWireType = value => value << bitshift >>> bitshift\n    }\n    var isUnsignedType = name.includes(\"unsigned\");\n    var checkAssertions = (value, toTypeName) => {};\n    var toWireType;\n    if (isUnsignedType) {\n        toWireType = function(destructors, value) {\n            checkAssertions(value, this.name);\n            return value >>> 0\n        }\n    } else {\n        toWireType = function(destructors, value) {\n            checkAssertions(value, this.name);\n            return value\n        }\n    }\n    registerType(primitiveType, {\n        name: name,\n        \"fromWireType\": fromWireType,\n        \"toWireType\": toWireType,\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n        destructorFunction: null\n    })\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n    var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n    var TA = typeMapping[dataTypeIndex];\n\n    function decodeMemoryView(handle) {\n        handle = handle >> 2;\n        var heap = HEAPU32;\n        var size = heap[handle];\n        var data = heap[handle + 1];\n        return new TA(buffer, data, size)\n    }\n    name = readLatin1String(name);\n    registerType(rawType, {\n        name: name,\n        \"fromWireType\": decodeMemoryView,\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": decodeMemoryView\n    }, {\n        ignoreDuplicateRegistrations: true\n    })\n}\n\nfunction __embind_register_std_string(rawType, name) {\n    name = readLatin1String(name);\n    var stdStringIsUTF8 = name === \"std::string\";\n    registerType(rawType, {\n        name: name,\n        \"fromWireType\": function(value) {\n            var length = HEAPU32[value >> 2];\n            var payload = value + 4;\n            var str;\n            if (stdStringIsUTF8) {\n                var decodeStartPtr = payload;\n                for (var i = 0; i <= length; ++i) {\n                    var currentBytePtr = payload + i;\n                    if (i == length || HEAPU8[currentBytePtr] == 0) {\n                        var maxRead = currentBytePtr - decodeStartPtr;\n                        var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                        if (str === undefined) {\n                            str = stringSegment\n                        } else {\n                            str += String.fromCharCode(0);\n                            str += stringSegment\n                        }\n                        decodeStartPtr = currentBytePtr + 1\n                    }\n                }\n            } else {\n                var a = new Array(length);\n                for (var i = 0; i < length; ++i) {\n                    a[i] = String.fromCharCode(HEAPU8[payload + i])\n                }\n                str = a.join(\"\")\n            }\n            _free(value);\n            return str\n        },\n        \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n                value = new Uint8Array(value)\n            }\n            var length;\n            var valueIsOfTypeString = typeof value == \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n                throwBindingError(\"Cannot pass non-string to std::string\")\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n                length = lengthBytesUTF8(value)\n            } else {\n                length = value.length\n            }\n            var base = _malloc(4 + length + 1);\n            var ptr = base + 4;\n            HEAPU32[base >> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n                stringToUTF8(value, ptr, length + 1)\n            } else {\n                if (valueIsOfTypeString) {\n                    for (var i = 0; i < length; ++i) {\n                        var charCode = value.charCodeAt(i);\n                        if (charCode > 255) {\n                            _free(ptr);\n                            throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")\n                        }\n                        HEAPU8[ptr + i] = charCode\n                    }\n                } else {\n                    for (var i = 0; i < length; ++i) {\n                        HEAPU8[ptr + i] = value[i]\n                    }\n                }\n            }\n            if (destructors !== null) {\n                destructors.push(_free, base)\n            }\n            return base\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: function(ptr) {\n            _free(ptr)\n        }\n    })\n}\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n    var endPtr = ptr;\n    var idx = endPtr >> 1;\n    var maxIdx = idx + maxBytesToRead / 2;\n    while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n    endPtr = idx << 1;\n    if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n    var str = \"\";\n    for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[ptr + i * 2 >> 1];\n        if (codeUnit == 0) break;\n        str += String.fromCharCode(codeUnit)\n    }\n    return str\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n    if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647\n    }\n    if (maxBytesToWrite < 2) return 0;\n    maxBytesToWrite -= 2;\n    var startPtr = outPtr;\n    var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n    for (var i = 0; i < numCharsToWrite; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        HEAP16[outPtr >> 1] = codeUnit;\n        outPtr += 2\n    }\n    HEAP16[outPtr >> 1] = 0;\n    return outPtr - startPtr\n}\n\nfunction lengthBytesUTF16(str) {\n    return str.length * 2\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n    var i = 0;\n    var str = \"\";\n    while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[ptr + i * 4 >> 2];\n        if (utf32 == 0) break;\n        ++i;\n        if (utf32 >= 65536) {\n            var ch = utf32 - 65536;\n            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\n        } else {\n            str += String.fromCharCode(utf32)\n        }\n    }\n    return str\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n    if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647\n    }\n    if (maxBytesToWrite < 4) return 0;\n    var startPtr = outPtr;\n    var endPtr = startPtr + maxBytesToWrite - 4;\n    for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) {\n            var trailSurrogate = str.charCodeAt(++i);\n            codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023\n        }\n        HEAP32[outPtr >> 2] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break\n    }\n    HEAP32[outPtr >> 2] = 0;\n    return outPtr - startPtr\n}\n\nfunction lengthBytesUTF32(str) {\n    var len = 0;\n    for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n        len += 4\n    }\n    return len\n}\n\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n    name = readLatin1String(name);\n    var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n    if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = () => HEAPU16;\n        shift = 1\n    } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = () => HEAPU32;\n        shift = 2\n    }\n    registerType(rawType, {\n        name: name,\n        \"fromWireType\": function(value) {\n            var length = HEAPU32[value >> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i * charSize;\n                if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n                    var maxReadBytes = currentBytePtr - decodeStartPtr;\n                    var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                    if (str === undefined) {\n                        str = stringSegment\n                    } else {\n                        str += String.fromCharCode(0);\n                        str += stringSegment\n                    }\n                    decodeStartPtr = currentBytePtr + charSize\n                }\n            }\n            _free(value);\n            return str\n        },\n        \"toWireType\": function(destructors, value) {\n            if (!(typeof value == \"string\")) {\n                throwBindingError(\"Cannot pass non-string to C++ string type \" + name)\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            HEAPU32[ptr >> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n                destructors.push(_free, ptr)\n            }\n            return ptr\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: function(ptr) {\n            _free(ptr)\n        }\n    })\n}\n\nfunction __embind_register_void(rawType, name) {\n    name = readLatin1String(name);\n    registerType(rawType, {\n        isVoid: true,\n        name: name,\n        \"argPackAdvance\": 0,\n        \"fromWireType\": function() {\n            return undefined\n        },\n        \"toWireType\": function(destructors, o) {\n            return undefined\n        }\n    })\n}\n\nfunction __emscripten_throw_longjmp() {\n    throw Infinity\n}\n\nfunction __emval_incref(handle) {\n    if (handle > 4) {\n        emval_handle_array[handle].refcount += 1\n    }\n}\n\nfunction requireRegisteredType(rawType, humanName) {\n    var impl = registeredTypes[rawType];\n    if (undefined === impl) {\n        throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType))\n    }\n    return impl\n}\n\nfunction __emval_take_value(type, arg) {\n    type = requireRegisteredType(type, \"_emval_take_value\");\n    var v = type[\"readValueFromPointer\"](arg);\n    return Emval.toHandle(v)\n}\n\nfunction _abort() {\n    abort(\"\")\n}\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n    HEAPU8.copyWithin(dest, src, src + num)\n}\n\nfunction getHeapMax() {\n    return 2147483648\n}\n\nfunction emscripten_realloc_buffer(size) {\n    try {\n        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1\n    } catch (e) {}\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n    var oldSize = HEAPU8.length;\n    requestedSize = requestedSize >>> 0;\n    var maxHeapSize = getHeapMax();\n    if (requestedSize > maxHeapSize) {\n        return false\n    }\n    let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n    for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n            return true\n        }\n    }\n    return false\n}\nvar ENV = {};\n\nfunction getExecutableName() {\n    return thisProgram || \"./this.program\"\n}\n\nfunction getEnvStrings() {\n    if (!getEnvStrings.strings) {\n        var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n        var env = {\n            \"USER\": \"web_user\",\n            \"LOGNAME\": \"web_user\",\n            \"PATH\": \"/\",\n            \"PWD\": \"/\",\n            \"HOME\": \"/home/web_user\",\n            \"LANG\": lang,\n            \"_\": getExecutableName()\n        };\n        for (var x in ENV) {\n            if (ENV[x] === undefined) delete env[x];\n            else env[x] = ENV[x]\n        }\n        var strings = [];\n        for (var x in env) {\n            strings.push(x + \"=\" + env[x])\n        }\n        getEnvStrings.strings = strings\n    }\n    return getEnvStrings.strings\n}\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n    for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i)\n    }\n    if (!dontAddNull) HEAP8[buffer >> 0] = 0\n}\n\nfunction _environ_get(__environ, environ_buf) {\n    var bufSize = 0;\n    getEnvStrings().forEach(function(string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[__environ + i * 4 >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1\n    });\n    return 0\n}\n\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\n    var strings = getEnvStrings();\n    HEAPU32[penviron_count >> 2] = strings.length;\n    var bufSize = 0;\n    strings.forEach(function(string) {\n        bufSize += string.length + 1\n    });\n    HEAPU32[penviron_buf_size >> 2] = bufSize;\n    return 0\n}\n\nfunction _fd_close(fd) {\n    return 52\n}\n\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n    return 52\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n    return 70\n}\nvar printCharBuffers = [null, [],\n    []\n];\n\nfunction printChar(stream, curr) {\n    var buffer = printCharBuffers[stream];\n    if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0\n    } else {\n        buffer.push(curr)\n    }\n}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n    var num = 0;\n    for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[iov + 4 >> 2];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n            printChar(fd, HEAPU8[ptr + j])\n        }\n        num += len\n    }\n    HEAPU32[pnum >> 2] = num;\n    return 0\n}\n\nfunction _strftime_l(s, maxsize, format, tm, loc) {\n    // XXX Судя по коду RLottie, эта функция не используется\n    return 0;\n    // return _strftime(s, maxsize, format, tm)\n}\nembind_init_charCodes();\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\ninit_ClassHandle();\ninit_embind();\ninit_RegisteredPointer();\nUnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\ninit_emval();\nvar asmLibraryArg = {\n    \"__assert_fail\": ___assert_fail,\n    \"__cxa_allocate_exception\": ___cxa_allocate_exception,\n    \"__cxa_throw\": ___cxa_throw,\n    \"__syscall_ioctl\": ___syscall_ioctl,\n    \"__syscall_openat\": ___syscall_openat,\n    \"_embind_register_bigint\": __embind_register_bigint,\n    \"_embind_register_bool\": __embind_register_bool,\n    \"_embind_register_class\": __embind_register_class,\n    \"_embind_register_class_constructor\": __embind_register_class_constructor,\n    \"_embind_register_class_function\": __embind_register_class_function,\n    \"_embind_register_emval\": __embind_register_emval,\n    \"_embind_register_float\": __embind_register_float,\n    \"_embind_register_integer\": __embind_register_integer,\n    \"_embind_register_memory_view\": __embind_register_memory_view,\n    \"_embind_register_std_string\": __embind_register_std_string,\n    \"_embind_register_std_wstring\": __embind_register_std_wstring,\n    \"_embind_register_void\": __embind_register_void,\n    \"_emscripten_throw_longjmp\": __emscripten_throw_longjmp,\n    \"_emval_decref\": __emval_decref,\n    \"_emval_incref\": __emval_incref,\n    \"_emval_take_value\": __emval_take_value,\n    \"abort\": _abort,\n    \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n    \"emscripten_resize_heap\": _emscripten_resize_heap,\n    \"environ_get\": _environ_get,\n    \"environ_sizes_get\": _environ_sizes_get,\n    \"fd_close\": _fd_close,\n    \"fd_read\": _fd_read,\n    \"fd_seek\": _fd_seek,\n    \"fd_write\": _fd_write,\n    \"invoke_vi\": invoke_vi,\n    \"invoke_viii\": invoke_viii,\n    \"invoke_viiii\": invoke_viiii,\n    \"invoke_viiiii\": invoke_viiiii,\n    \"strftime_l\": _strftime_l\n};\ncreateWasm();\nvar _free = Module[\"_free\"] = function() {\n    return (_free = Module[\"_free\"] = Module[\"asm\"][\"free\"]).apply(null, arguments)\n};\nvar _malloc = Module[\"_malloc\"] = function() {\n    return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"malloc\"]).apply(null, arguments)\n};\nvar ___getTypeName = Module[\"___getTypeName\"] = function() {\n    return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"__getTypeName\"]).apply(null, arguments)\n};\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = function() {\n    return (__embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = Module[\"asm\"][\"_embind_initialize_bindings\"]).apply(null, arguments)\n};\nvar ___errno_location = Module[\"___errno_location\"] = function() {\n    return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments)\n};\nvar _setThrew = Module[\"_setThrew\"] = function() {\n    return (_setThrew = Module[\"_setThrew\"] = Module[\"asm\"][\"setThrew\"]).apply(null, arguments)\n};\nvar _saveSetjmp = Module[\"_saveSetjmp\"] = function() {\n    return (_saveSetjmp = Module[\"_saveSetjmp\"] = Module[\"asm\"][\"saveSetjmp\"]).apply(null, arguments)\n};\nvar stackSave = Module[\"stackSave\"] = function() {\n    return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"stackSave\"]).apply(null, arguments)\n};\nvar stackRestore = Module[\"stackRestore\"] = function() {\n    return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments)\n};\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\n    return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments)\n};\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function() {\n    return (___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments)\n};\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n    return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments)\n};\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n    return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments)\n};\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n    return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null, arguments)\n};\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n    return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null, arguments)\n};\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n    return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null, arguments)\n};\n\nfunction invoke_vi(index, a1) {\n    var sp = stackSave();\n    try {\n        getWasmTableEntry(index)(a1)\n    } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0)\n    }\n}\n\nfunction invoke_viii(index, a1, a2, a3) {\n    var sp = stackSave();\n    try {\n        getWasmTableEntry(index)(a1, a2, a3)\n    } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0)\n    }\n}\n\nfunction invoke_viiii(index, a1, a2, a3, a4) {\n    var sp = stackSave();\n    try {\n        getWasmTableEntry(index)(a1, a2, a3, a4)\n    } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0)\n    }\n}\n\nfunction invoke_viiiii(index, a1, a2, a3, a4, a5) {\n    var sp = stackSave();\n    try {\n        getWasmTableEntry(index)(a1, a2, a3, a4, a5)\n    } catch (e) {\n        stackRestore(sp);\n        if (e !== e + 0) throw e;\n        _setThrew(1, 0)\n    }\n}\nvar calledRun;\ndependenciesFulfilled = function runCaller() {\n    if (!calledRun) run();\n    if (!calledRun) dependenciesFulfilled = runCaller\n};\n\nlet _wasmLoaderResolve;\nconst wasmLoader = new Promise(resolve => _wasmLoaderResolve = resolve);\n\nfunction run(args) {\n    args = args || arguments_;\n    if (runDependencies > 0) {\n        return\n    }\n    preRun();\n    if (runDependencies > 0) {\n        return\n    }\n\n    function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        postRun()\n        _wasmLoaderResolve(Module);\n    }\n    doRun()\n}\n\nrun();\n\nexport default wasmLoader;\n","import lottieLoader, { type RlottieWasm } from './rlottie-wasm';\nimport type { ID, WorkerPlayerOptions, FrameResponse, FrameRequest, WorkerMessage, RequestMap } from './types';\n\n/** Все инстансы плееров */\nconst instances = new Map<ID, WorkerPlayerInstace>();\nlet RLottie: typeof RlottieWasm;\n\nclass WorkerPlayerInstace {\n    public id: string | number;\n    public totalFrames = 0;\n    public frameRate = 0;\n    public disposed = false;\n    private player: RlottieWasm | null = null;\n\n    constructor(options: WorkerPlayerOptions) {\n        this.id = options.id;\n        this.player = new RLottie(options.data);\n        this.totalFrames = this.player.frames();\n        this.frameRate = this.player.frameRate();\n    }\n\n    /**\n     * Отрисовка указанного кадра\n     * @return Пиксельные данные о кадре или `undefined`, если отрисовать не удалось\n     * (например, плеер ещё не загружен или указали неправильный кадр)\n     */\n    render(frame: number, width: number, height: number): ArrayBuffer | void {\n        const { player, totalFrames } = this;\n        if (player && frame >= 0 && frame < totalFrames) {\n            const data = player.render(frame, width, height);\n\n            // Из WASM кода возвращается указатель на буффер с кадром внутри WASM-кучи.\n            // Более того, сам буффер переиспользуется для отрисовки последующих\n            // кадров. Из-за этого мы\n            // а) не можем передать его как transferable, так как он должен остаться\n            //    внутри процесса\n            // б) просто передать как аргумент и дать браузеру его скопировать,\n            //    потому что копироваться будет вся WASM-куча\n            // Так что делаем копию буффера вручную\n            return copyBuffer(data);\n        }\n    }\n\n    dispose() {\n        // Для удаления инстанса в Emscripten\n        this.player?.delete?.();\n        this.player = null;\n        this.disposed = true;\n    }\n}\n\nfunction create(options: WorkerPlayerOptions) {\n    const { id } = options;\n    let instance = instances.get(id);\n    if (!instance) {\n        instance = new WorkerPlayerInstace(options);\n        instances.set(id, instance);\n    }\n\n    return instance;\n}\n\nfunction dispose(id: ID) {\n    const instance = instances.get(id);\n    if (instance) {\n        instances.delete(id);\n        instance.dispose();\n    }\n}\n\n/**\n * Отрисовка кадров для указанных анимаций\n */\nfunction render(payload: FrameRequest[]) {\n    const frames: FrameResponse[] = [];\n    payload.forEach(req => {\n        try {\n            const instance = instances.get(req.id);\n            const data = instance?.render(req.frame, req.width, req.height)\n            if (data) {\n                frames.push({ ...req, data });\n            }\n        } catch {}\n    });\n\n    return frames;\n}\n\nself.addEventListener('message', (evt: MessageEvent<WorkerMessage>) => {\n    const { seq, name, payload } = evt.data\n\n    switch (name) {\n        case 'create':\n            const instance = create(payload);\n            respond(seq, name, {\n                totalFrames: instance.totalFrames,\n                frameRate: instance.frameRate\n            });\n            break;\n        case 'dispose':\n            dispose(payload.id);\n            respond(seq, name, { ok: true });\n            break;\n        case 'render':\n            const frames = render(payload.frames);\n            respond(seq, name, { frames }, frames.map(f => f.data));\n            break;\n    }\n});\n\n/**\n * Быстрое копирование буффера\n */\nfunction copyBuffer(src: Uint8Array): ArrayBuffer {\n    const dst = new ArrayBuffer(src.byteLength);\n    new Uint8Array(dst).set(src);\n    return dst;\n}\n\n/**\n * Ответ на PRC-сообщение\n */\nfunction respond<K extends keyof RequestMap>(seq: number, name: K, payload: RequestMap[K][1], transferable?: any) {\n    self.postMessage({ seq, name, payload }, transferable);\n}\n\nlottieLoader.then(({ RlottieWasm }) => {\n    RLottie = RlottieWasm;\n    // Сообщаем, что загрузились\n    self.postMessage({ type: 'init' });\n});\n"],"names":["wasmBinaryFile","Module","moduleOverrides","thisProgram","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","scriptDirectory","readBinary","url","xhr","out","err","wasmBinary","abort","wasmMemory","ABORT","assert","condition","text","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","u1","u2","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","u","stringToUTF8","outPtr","lengthBytesUTF8","len","c","buffer","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateGlobalBufferAndViews","buf","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","callRuntimeCallbacks","initRuntime","postRun","addOnInit","cb","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","what","dataURIPrefix","isDataURI","filename","isFileURI","getBinary","file","getBinaryPromise","response","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","receiveInstantiationResult","result","instantiateArrayBuffer","receiver","binary","reason","instantiateAsync","callbacks","___assert_fail","line","func","___cxa_allocate_exception","size","_malloc","ExceptionInfo","excPtr","type","destructor","refcount","caught","rethrown","value","prev","adjustedPtr","isPointer","___cxa_is_pointer_type","adjusted","___cxa_throw","___syscall_ioctl","fd","op","varargs","___syscall_openat","dirfd","path","flags","__embind_register_bigint","primitiveType","name","minRange","maxRange","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","ret","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","f","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","message","stack","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","rawType","registeredInstance","options","__embind_register_bool","trueValue","falseValue","shift","wt","destructors","o","pointer","ClassHandle_isAliasOf","other","ClassHandle","leftClass","left","rightClass","right","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","finalizationRegistry","detachFinalizer","runDestructor","$$","releaseClassHandle","toDelete","downcastPointer","ptrClass","desiredClass","rv","registeredPointers","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","k","deletionQueue","flushPendingDeletes","delayFunction","setDelayFunction","fn","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","prototype","record","hasSmartPtrType","hasSmartPtr","attachFinalizer","RegisteredPointer_fromWireType","rawPointer","makeDefaultHandle","actualType","registeredPointerRecord","toType","dp","ClassHandle_clone","clone","ClassHandle_delete","ClassHandle_isDeleted","ClassHandle_deleteLater","init_ClassHandle","ensureOverloadTable","proto","methodName","humanName","prevFunc","exposePublicSymbol","numArguments","RegisteredClass","constructor","instancePrototype","rawDestructor","baseClass","getActualType","upcast","downcast","upcastPointer","constNoSmartPtrRawPointerToWireType","embindRepr","handleClass","genericPointerToWireType","clonedHandle","Emval","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","RegisteredPointer_getPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","init_RegisteredPointer","RegisteredPointer","registeredClass","isReference","isConst","isSmartPointer","pointeeType","sharingPolicy","rawGetPointee","rawConstructor","rawShare","replacePublicSymbol","dynCallLegacy","sig","args","wasmTableMirror","getWasmTableEntry","funcPtr","dynCall","rtn","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","count","firstElement","array","runDestructors","del","new_","argumentList","dummy","r","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","argCount","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","invokerFunction","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","__embind_register_class_function","rawInvoker","context","isPureVirtual","unboundTypesHandler","method","memberFunction","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","__embind_register_emval","v","t","floatReadValueFromPointer","__embind_register_float","integerReadValueFromPointer","signed","__embind_register_integer","fromWireType","bitshift","isUnsignedType","checkAssertions","toTypeName","toWireType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","data","__embind_register_std_string","stdStringIsUTF8","length","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","valueIsOfTypeString","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","__embind_register_void","__emscripten_throw_longjmp","__emval_incref","requireRegisteredType","impl","__emval_take_value","arg","_abort","_emscripten_memcpy_big","dest","src","num","getHeapMax","emscripten_realloc_buffer","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","newSize","replacement","ENV","getExecutableName","getEnvStrings","lang","env","strings","writeAsciiToMemory","dontAddNull","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_read","iov","iovcnt","pnum","_fd_seek","offset_low","offset_high","whence","newOffset","printCharBuffers","printChar","stream","curr","_fd_write","j","_strftime_l","s","maxsize","format","tm","loc","invoke_vi","invoke_viii","invoke_viiii","invoke_viiiii","_setThrew","stackSave","stackRestore","index","a1","sp","e","a2","a3","a4","a5","calledRun","runCaller","run","_wasmLoaderResolve","wasmLoader","resolve","doRun","instances","RLottie","WorkerPlayerInstace","__publicField","frame","width","height","player","totalFrames","copyBuffer","_a","_b","create","dispose","render","frames","req","evt","seq","respond","dst","transferable","lottieLoader","RlottieWasm"],"mappings":"4KAAA,IAAeA,EAAA,GAAA,IAAA,IAAA,6BAAA,YAAA,GAAA,EAAA,KCEXC,EAAS,OAAOA,GAAU,YAAcA,EAAS,CAAA,EACjDC,GAAkB,OAAO,OAAO,CAAE,EAAED,CAAM,EAE1CE,GAAc,iBACdC,GAAqB,OAAO,QAAU,SACtCC,GAAwB,OAAO,eAAiB,WAChDC,EAAkB,GAElBC,IAEAH,IAAsBC,MAClBA,GACAC,EAAkB,KAAK,SAAS,KACzB,OAAO,UAAY,aAAe,SAAS,gBAClDA,EAAkB,SAAS,cAAc,KAEzCA,EAAgB,QAAQ,OAAO,IAAM,EACrCA,EAAkBA,EAAgB,OAAO,EAAGA,EAAgB,QAAQ,SAAU,EAAE,EAAE,YAAY,GAAG,EAAI,CAAC,EAEtGA,EAAkB,GAEdD,KACAE,GAAaC,GAAO,CAChB,IAAIC,EAAM,IAAI,eACd,OAAAA,EAAI,KAAK,MAAOD,EAAK,EAAK,EAC1BC,EAAI,aAAe,cACnBA,EAAI,KAAK,IAAI,EACN,IAAI,WAAWA,EAAI,QAAQ,CACrC,IAKb,IAAIC,GAAM,QAAQ,IAAI,KAAK,OAAO,EAC9BC,EAAM,QAAQ,KAAK,KAAK,OAAO,EACnC,OAAO,OAAOV,EAAQC,EAAe,EACrCA,GAAkB,KAElB,IAAIU,GAEA,OAAO,aAAe,UACtBC,EAAM,iCAAiC,EAE3C,IAAIC,GACAC,GAAQ,GAGZ,SAASC,GAAOC,EAAWC,EAAM,CACxBD,GACDJ,EAAMK,CAAI,CAElB,CACA,IAAIC,GAAc,OAAO,aAAe,YAAc,IAAI,YAAY,MAAM,EAAI,OAEhF,SAASC,GAAkBC,EAAaC,EAAKC,EAAgB,CAGzD,QAFIC,EAASF,EAAMC,EACfE,EAASH,EACND,EAAYI,IAAW,EAAEA,GAAUD,IAAS,EAAEC,EACrD,GAAIA,EAASH,EAAM,IAAMD,EAAY,QAAUF,GAC3C,OAAOA,GAAY,OAAOE,EAAY,SAASC,EAAKG,CAAM,CAAC,EAG/D,QADIC,EAAM,GACHJ,EAAMG,GAAQ,CACjB,IAAIE,EAAKN,EAAYC,KACrB,GAAI,EAAEK,EAAK,KAAM,CACbD,GAAO,OAAO,aAAaC,CAAE,EAC7B,QACH,CACD,IAAIC,EAAKP,EAAYC,KAAS,GAC9B,IAAKK,EAAK,MAAQ,IAAK,CACnBD,GAAO,OAAO,cAAcC,EAAK,KAAO,EAAIC,CAAE,EAC9C,QACH,CACD,IAAIC,EAAKR,EAAYC,KAAS,GAM9B,IALKK,EAAK,MAAQ,IACdA,GAAMA,EAAK,KAAO,GAAKC,GAAM,EAAIC,EAEjCF,GAAMA,EAAK,IAAM,GAAKC,GAAM,GAAKC,GAAM,EAAIR,EAAYC,KAAS,GAEhEK,EAAK,MACLD,GAAO,OAAO,aAAaC,CAAE,MAC1B,CACH,IAAIG,EAAKH,EAAK,MACdD,GAAO,OAAO,aAAa,MAAQI,GAAM,GAAI,MAAQA,EAAK,IAAI,CACjE,CACJ,CACD,OAAOJ,CACX,CAEA,SAASK,GAAaC,EAAKT,EAAgB,CACvC,OAAOS,EAAMZ,GAAkBa,EAAQD,EAAKT,CAAc,EAAI,EAClE,CAEA,SAASW,GAAkBR,EAAKS,EAAMC,EAAQC,EAAiB,CAC3D,GAAI,EAAEA,EAAkB,GAAI,MAAO,GAGnC,QAFIC,EAAWF,EACXZ,EAASY,EAASC,EAAkB,EAC/BE,EAAI,EAAGA,EAAIb,EAAI,OAAQ,EAAEa,EAAG,CACjC,IAAIC,EAAId,EAAI,WAAWa,CAAC,EACxB,GAAIC,GAAK,OAASA,GAAK,MAAO,CAC1B,IAAIZ,EAAKF,EAAI,WAAW,EAAEa,CAAC,EAC3BC,EAAI,QAAUA,EAAI,OAAS,IAAMZ,EAAK,IACzC,CACD,GAAIY,GAAK,IAAK,CACV,GAAIJ,GAAUZ,EAAQ,MACtBW,EAAKC,KAAYI,CAC7B,SAAmBA,GAAK,KAAM,CAClB,GAAIJ,EAAS,GAAKZ,EAAQ,MAC1BW,EAAKC,KAAY,IAAMI,GAAK,EAC5BL,EAAKC,KAAY,IAAMI,EAAI,EACvC,SAAmBA,GAAK,MAAO,CACnB,GAAIJ,EAAS,GAAKZ,EAAQ,MAC1BW,EAAKC,KAAY,IAAMI,GAAK,GAC5BL,EAAKC,KAAY,IAAMI,GAAK,EAAI,GAChCL,EAAKC,KAAY,IAAMI,EAAI,EACvC,KAAe,CACH,GAAIJ,EAAS,GAAKZ,EAAQ,MAC1BW,EAAKC,KAAY,IAAMI,GAAK,GAC5BL,EAAKC,KAAY,IAAMI,GAAK,GAAK,GACjCL,EAAKC,KAAY,IAAMI,GAAK,EAAI,GAChCL,EAAKC,KAAY,IAAMI,EAAI,EAC9B,CACJ,CACD,OAAAL,EAAKC,GAAU,EACRA,EAASE,CACpB,CAEA,SAASG,GAAaf,EAAKgB,EAAQL,EAAiB,CAChD,OAAOH,GAAkBR,EAAKO,EAAQS,EAAQL,CAAe,CACjE,CAEA,SAASM,GAAgBjB,EAAK,CAE1B,QADIkB,EAAM,EACDL,EAAI,EAAGA,EAAIb,EAAI,OAAQ,EAAEa,EAAG,CACjC,IAAIM,EAAInB,EAAI,WAAWa,CAAC,EACpBM,GAAK,IACLD,IACOC,GAAK,KACZD,GAAO,EACAC,GAAK,OAASA,GAAK,OAC1BD,GAAO,EACP,EAAEL,GAEFK,GAAO,CAEd,CACD,OAAOA,CACX,CACA,IAAIE,GAAQC,EAAOd,EAAQe,EAAQC,GAASC,EAAQC,EAASC,GAASC,GAEtE,SAASC,GAA2BC,EAAK,CACrCT,GAASS,EACTtD,EAAO,MAAW8C,EAAQ,IAAI,UAAUQ,CAAG,EAC3CtD,EAAO,OAAY+C,EAAS,IAAI,WAAWO,CAAG,EAC9CtD,EAAO,OAAYiD,EAAS,IAAI,WAAWK,CAAG,EAC9CtD,EAAO,OAAYgC,EAAS,IAAI,WAAWsB,CAAG,EAC9CtD,EAAO,QAAagD,GAAU,IAAI,YAAYM,CAAG,EACjDtD,EAAO,QAAakD,EAAU,IAAI,YAAYI,CAAG,EACjDtD,EAAO,QAAamD,GAAU,IAAI,aAAaG,CAAG,EAClDtD,EAAO,QAAaoD,GAAU,IAAI,aAAaE,CAAG,CACtD,CAEA,IAAIC,GACAC,GAAe,CAAA,EACfC,GAAa,CAAA,EACbC,GAAgB,CAAA,EAGpB,SAASC,IAAS,CACdC,GAAqBJ,EAAY,CACrC,CAEA,SAASK,IAAc,CAEnBD,GAAqBH,EAAU,CACnC,CAEA,SAASK,IAAU,CACfF,GAAqBF,EAAa,CACtC,CAEA,SAASK,GAAUC,EAAI,CACnBP,GAAW,QAAQO,CAAE,CACzB,CAEA,IAAIC,EAAkB,EAElBC,EAAwB,KAE5B,SAASC,GAAiBC,EAAI,CAC1BH,GACJ,CAEA,SAASI,GAAoBD,EAAI,CAE7B,GADAH,IACIA,GAAmB,GAKfC,EAAuB,CACvB,IAAII,EAAWJ,EACfA,EAAwB,KACxBI,EAAU,CACb,CAET,CAEA,SAAS1D,EAAM2D,EAAM,CACbvE,EAAO,SACPA,EAAO,QAAWuE,CAAI,EAE1BA,EAAO,WAAaA,EAAO,IAC3B7D,EAAI6D,CAAI,EACRzD,GAAQ,GAERyD,GAAQ,2CACR,IAAI,EAAI,IAAI,YAAY,aAAaA,CAAI,EACzC,MAAM,CACV,CACA,IAAIC,GAAgB,+BAEpB,SAASC,GAAUC,EAAU,CACzB,OAAOA,EAAS,WAAWF,EAAa,CAC5C,CAEA,SAASG,GAAUD,EAAU,CACzB,OAAOA,EAAS,WAAW,SAAS,CACxC,CAEA,SAASE,GAAUC,EAAM,CACrB,GAAI,CACA,GAAIA,GAAQ9E,GAAkBY,GAC1B,OAAO,IAAI,WAAWA,EAAU,EAEpC,GAAIL,GACA,OAAOA,GAAWuE,CAAI,EAE1B,KAAM,iDACT,OAAQnE,EAAP,CACEE,EAAMF,CAAG,CACZ,CACL,CAEA,SAASoE,IAAmB,CAEpB,OAAI,OAAO,OAAS,YAAc,CAACH,GAAU5E,CAAc,EAChD,MAAMA,EAAgB,CACzB,YAAa,aAC7B,CAAa,EAAE,KAAK,SAASgF,EAAU,CACvB,GAAI,CAACA,EAAS,GACV,KAAM,uCAAyChF,EAAiB,IAEpE,OAAOgF,EAAS,YAAgB,CAChD,CAAa,EAAE,MAAM,UAAW,CAChB,OAAOH,GAAU7E,CAAc,CAC/C,CAAa,EAGF,QAAQ,UAAU,KAAK,UAAW,CACrC,OAAO6E,GAAU7E,CAAc,CACvC,CAAK,CACL,CAEA,SAASiF,IAAa,CAClB,IAAIC,EAAO,CACP,IAAOC,GACP,uBAA0BA,EAClC,EAEI,SAASC,EAAgBC,EAAUC,EAAQ,CACvC,IAAIC,EAAUF,EAAS,QACvBpF,EAAO,IAASsF,EAChBzE,GAAab,EAAO,IAAO,OAC3BqD,GAA2BxC,GAAW,MAAM,EAC5C0C,GAAYvD,EAAO,IAAO,0BAC1B+D,GAAU/D,EAAO,IAAO,iBAAoB,EAC5CqE,GAAsC,CACzC,CACDF,GAAmC,EAEnC,SAASoB,EAA2BC,EAAQ,CACxCL,EAAgBK,EAAO,QAAW,CACrC,CAED,SAASC,EAAuBC,EAAU,CACtC,OAAOZ,GAAkB,EAAC,KAAK,SAASa,EAAQ,CAC5C,OAAO,YAAY,YAAYA,EAAQV,CAAI,CACvD,CAAS,EAAE,KAAK,SAASG,EAAU,CACvB,OAAOA,CACV,CAAA,EAAE,KAAKM,EAAU,SAASE,EAAQ,CAC/BlF,EAAI,0CAA4CkF,CAAM,EACtDhF,EAAMgF,CAAM,CACxB,CAAS,CACJ,CAED,SAASC,GAAmB,CACxB,OAAmB,OAAO,YAAY,sBAAwB,YAAc,CAACpB,GAAU1E,CAAc,GAAK,CAAC4E,GAAU5E,CAAc,GAAK,OAAO,OAAS,WAC7I,MAAMA,EAAgB,CACzB,YAAa,aAC7B,CAAa,EAAE,KAAK,SAASgF,EAAU,CACvB,IAAIS,EAAS,YAAY,qBAAqBT,EAAUE,CAAI,EAC5D,OAAOO,EAAO,KAAKD,EAA4B,SAASK,EAAQ,CAC5D,OAAAlF,EAAI,kCAAoCkF,CAAM,EAC9ClF,EAAI,2CAA2C,EACxC+E,EAAuBF,CAA0B,CAC5E,CAAiB,CACjB,CAAa,EAEME,EAAuBF,CAA0B,CAE/D,CACD,OAAAM,IACO,CAAE,CACb,CAEA,SAASjC,GAAqBkC,EAAW,CACrC,KAAOA,EAAU,OAAS,GACtBA,EAAU,MAAO,EAAC9F,CAAM,CAEhC,CAEA,SAAS+F,GAAe/E,EAAW0D,EAAUsB,EAAMC,EAAM,CACrDrF,EAAM,qBAAuBkB,GAAad,CAAS,EAAI,SAAW,CAAC0D,EAAW5C,GAAa4C,CAAQ,EAAI,mBAAoBsB,EAAMC,EAAOnE,GAAamE,CAAI,EAAI,kBAAkB,CAAC,CACpL,CAEA,SAASC,GAA0BC,EAAM,CACrC,OAAOC,GAAQD,EAAO,EAAE,EAAI,EAChC,CAEA,SAASE,GAAcC,EAAQ,CAC3B,KAAK,OAASA,EACd,KAAK,IAAMA,EAAS,GACpB,KAAK,SAAW,SAASC,EAAM,CAC3BrD,EAAQ,KAAK,IAAM,GAAK,GAAKqD,CACrC,EACI,KAAK,SAAW,UAAW,CACvB,OAAOrD,EAAQ,KAAK,IAAM,GAAK,EACvC,EACI,KAAK,eAAiB,SAASsD,EAAY,CACvCtD,EAAQ,KAAK,IAAM,GAAK,GAAKsD,CACrC,EACI,KAAK,eAAiB,UAAW,CAC7B,OAAOtD,EAAQ,KAAK,IAAM,GAAK,EACvC,EACI,KAAK,aAAe,SAASuD,EAAU,CACnCxD,EAAO,KAAK,KAAO,GAAKwD,CAChC,EACI,KAAK,WAAa,SAASC,EAAQ,CAC/BA,EAASA,EAAS,EAAI,EACtB5D,EAAM,KAAK,IAAM,IAAM,GAAK4D,CACpC,EACI,KAAK,WAAa,UAAW,CACzB,OAAO5D,EAAM,KAAK,IAAM,IAAM,IAAM,CAC5C,EACI,KAAK,aAAe,SAAS6D,EAAU,CACnCA,EAAWA,EAAW,EAAI,EAC1B7D,EAAM,KAAK,IAAM,IAAM,GAAK6D,CACpC,EACI,KAAK,aAAe,UAAW,CAC3B,OAAO7D,EAAM,KAAK,IAAM,IAAM,IAAM,CAC5C,EACI,KAAK,KAAO,SAASyD,EAAMC,EAAY,CACnC,KAAK,iBAAiB,CAAC,EACvB,KAAK,SAASD,CAAI,EAClB,KAAK,eAAeC,CAAU,EAC9B,KAAK,aAAa,CAAC,EACnB,KAAK,WAAW,EAAK,EACrB,KAAK,aAAa,EAAK,CAC/B,EACI,KAAK,QAAU,UAAW,CACtB,IAAII,EAAQ3D,EAAO,KAAK,KAAO,GAC/BA,EAAO,KAAK,KAAO,GAAK2D,EAAQ,CACxC,EACI,KAAK,YAAc,UAAW,CAC1B,IAAIC,EAAO5D,EAAO,KAAK,KAAO,GAC9B,OAAAA,EAAO,KAAK,KAAO,GAAK4D,EAAO,EACxBA,IAAS,CACxB,EACI,KAAK,iBAAmB,SAASC,EAAa,CAC1C5D,EAAQ,KAAK,IAAM,IAAM,GAAK4D,CACtC,EACI,KAAK,iBAAmB,UAAW,CAC/B,OAAO5D,EAAQ,KAAK,IAAM,IAAM,EACxC,EACI,KAAK,kBAAoB,UAAW,CAChC,IAAI6D,EAAYC,GAAuB,KAAK,SAAU,CAAA,EACtD,GAAID,EACA,OAAO7D,EAAQ,KAAK,QAAU,GAElC,IAAI+D,EAAW,KAAK,mBACpB,OAAIA,IAAa,EAAUA,EACpB,KAAK,MACf,CACL,CAIA,SAASC,GAAanF,EAAKwE,EAAMC,EAAY,CACzC,IAAIvB,EAAO,IAAIoB,GAActE,CAAG,EAChC,MAAAkD,EAAK,KAAKsB,EAAMC,CAAU,EAGpBzE,CACV,CAcA,SAASoF,GAAiBC,EAAIC,EAAIC,EAAS,CAEvC,MAAO,EACX,CAEA,SAASC,GAAkBC,EAAOC,EAAMC,EAAOJ,EAAS,CAExD,CAEA,SAASK,GAAyBC,EAAeC,EAAM1B,EAAM2B,EAAUC,EAAU,CAAE,CAEnF,SAASC,GAAiB7B,EAAM,CAC5B,OAAQA,EAAI,CACR,IAAK,GACD,MAAO,GACX,IAAK,GACD,MAAO,GACX,IAAK,GACD,MAAO,GACX,IAAK,GACD,MAAO,GACX,QACI,MAAM,IAAI,UAAU,sBAAwBA,CAAI,CACvD,CACL,CAEA,SAAS8B,IAAwB,CAE7B,QADIC,EAAQ,IAAI,MAAM,GAAG,EAChB5F,EAAI,EAAGA,EAAI,IAAK,EAAEA,EACvB4F,EAAM5F,GAAK,OAAO,aAAaA,CAAC,EAEpC6F,GAAmBD,CACvB,CACA,IAAIC,GAAmB,OAEvB,SAASC,EAAiBrG,EAAK,CAG3B,QAFIsG,EAAM,GACNzF,EAAIb,EACDC,EAAOY,IACVyF,GAAOF,GAAiBnG,EAAOY,MAEnC,OAAOyF,CACX,CACA,IAAIC,EAAuB,CAAA,EACvBC,EAAkB,CAAA,EAClBC,GAAmB,CAAA,EACnBC,GAAS,GACTC,GAAS,GAEb,SAASC,GAAsBd,EAAM,CACjC,GAAkBA,IAAd,OACA,MAAO,WAEXA,EAAOA,EAAK,QAAQ,iBAAkB,GAAG,EACzC,IAAIe,EAAIf,EAAK,WAAW,CAAC,EACzB,OAAIe,GAAKH,IAAUG,GAAKF,GACb,IAAMb,EAEVA,CACX,CAEA,SAASgB,GAAoBhB,EAAMiB,EAAM,CACrC,OAAAjB,EAAOc,GAAsBd,CAAI,EAC1B,IAAI,SAAS,OAAQ,mBAAqBA,EAAO;AAAA;AAAA;AAAA,CAAqF,EAAEiB,CAAI,CACvJ,CAEA,SAASC,GAAYC,EAAeC,EAAW,CAC3C,IAAIC,EAAaL,GAAoBI,EAAW,SAASE,EAAS,CAC9D,KAAK,KAAOF,EACZ,KAAK,QAAUE,EACf,IAAIC,EAAQ,IAAI,MAAMD,CAAO,EAAE,MAC3BC,IAAU,SACV,KAAK,MAAQ,KAAK,SAAU,EAAG;AAAA,EAAOA,EAAM,QAAQ,qBAAsB,EAAE,EAExF,CAAK,EACD,OAAAF,EAAW,UAAY,OAAO,OAAOF,EAAc,SAAS,EAC5DE,EAAW,UAAU,YAAcA,EACnCA,EAAW,UAAU,SAAW,UAAW,CACvC,OAAI,KAAK,UAAY,OACV,KAAK,KAEL,KAAK,KAAO,KAAO,KAAK,OAE3C,EACWA,CACX,CACA,IAAIG,EAAe,OAEnB,SAASC,EAAkBH,EAAS,CAChC,MAAM,IAAIE,EAAaF,CAAO,CAClC,CACA,IAAII,GAAgB,OAEpB,SAASC,GAAmBL,EAAS,CACjC,MAAM,IAAII,GAAcJ,CAAO,CACnC,CAEA,SAASM,EAA8BC,EAASC,EAAgBC,EAAmB,CAC/EF,EAAQ,QAAQ,SAASnD,EAAM,CAC3BiC,GAAiBjC,GAAQoD,CACjC,CAAK,EAED,SAASE,EAAWC,EAAgB,CAChC,IAAIC,EAAmBH,EAAkBE,CAAc,EACnDC,EAAiB,SAAWL,EAAQ,QACpCF,GAAmB,iCAAiC,EAExD,QAASlH,EAAI,EAAGA,EAAIoH,EAAQ,OAAQ,EAAEpH,EAClC0H,EAAaN,EAAQpH,GAAIyH,EAAiBzH,EAAE,CAEnD,CACD,IAAIwH,EAAiB,IAAI,MAAMH,EAAe,MAAM,EAChDM,EAAoB,CAAA,EACpBC,EAAa,EACjBP,EAAe,QAAQ,CAACQ,EAAI7H,IAAM,CAC1BiG,EAAgB,eAAe4B,CAAE,EACjCL,EAAexH,GAAKiG,EAAgB4B,IAEpCF,EAAkB,KAAKE,CAAE,EACpB7B,EAAqB,eAAe6B,CAAE,IACvC7B,EAAqB6B,GAAM,CAAE,GAEjC7B,EAAqB6B,GAAI,KAAK,IAAM,CAChCL,EAAexH,GAAKiG,EAAgB4B,GACpC,EAAED,EACEA,IAAeD,EAAkB,QACjCJ,EAAWC,CAAc,CAE7C,CAAa,EAEb,CAAK,EACSG,EAAkB,SAAxB,GACAJ,EAAWC,CAAc,CAEjC,CAEA,SAASE,EAAaI,EAASC,EAAoBC,EAAU,CAAA,EAAI,CAC7D,GAAI,EAAE,mBAAoBD,GACtB,MAAM,IAAI,UAAU,yDAAyD,EAEjF,IAAIxC,EAAOwC,EAAmB,KAI9B,GAHKD,GACDd,EAAkB,SAAWzB,EAAO,+CAA+C,EAEnFU,EAAgB,eAAe6B,CAAO,EAAG,CACzC,GAAIE,EAAQ,6BACR,OAEAhB,EAAkB,yBAA2BzB,EAAO,SAAS,CAEpE,CAGD,GAFAU,EAAgB6B,GAAWC,EAC3B,OAAO7B,GAAiB4B,GACpB9B,EAAqB,eAAe8B,CAAO,EAAG,CAC9C,IAAItE,EAAYwC,EAAqB8B,GACrC,OAAO9B,EAAqB8B,GAC5BtE,EAAU,QAAQ9B,GAAMA,GAAI,CAC/B,CACL,CAEA,SAASuG,GAAuBH,EAASvC,EAAM1B,EAAMqE,EAAWC,EAAY,CACxE,IAAIC,EAAQ1C,GAAiB7B,CAAI,EACjC0B,EAAOO,EAAiBP,CAAI,EAC5BmC,EAAaI,EAAS,CAClB,KAAMvC,EACN,aAAgB,SAAS8C,EAAI,CACzB,MAAO,CAAC,CAACA,CACZ,EACD,WAAc,SAASC,EAAaC,EAAG,CACnC,OAAOA,EAAIL,EAAYC,CAC1B,EACD,eAAkB,EAClB,qBAAwB,SAASK,EAAS,CACtC,IAAI5I,EACJ,GAAIiE,IAAS,EACTjE,EAAOY,UACAqD,IAAS,EAChBjE,EAAOa,UACAoD,IAAS,EAChBjE,EAAOe,MAEP,OAAM,IAAI,UAAU,8BAAgC4E,CAAI,EAE5D,OAAO,KAAK,aAAgB3F,EAAK4I,GAAWJ,EAAM,CACrD,EACD,mBAAoB,IAC5B,CAAK,CACL,CAEA,SAASK,GAAsBC,EAAO,CAIlC,GAHI,EAAE,gBAAgBC,IAGlB,EAAED,aAAiBC,GACnB,MAAO,GAMX,QAJIC,EAAY,KAAK,GAAG,QAAQ,gBAC5BC,EAAO,KAAK,GAAG,IACfC,EAAaJ,EAAM,GAAG,QAAQ,gBAC9BK,EAAQL,EAAM,GAAG,IACdE,EAAU,WACbC,EAAOD,EAAU,OAAOC,CAAI,EAC5BD,EAAYA,EAAU,UAE1B,KAAOE,EAAW,WACdC,EAAQD,EAAW,OAAOC,CAAK,EAC/BD,EAAaA,EAAW,UAE5B,OAAOF,IAAcE,GAAcD,IAASE,CAChD,CAEA,SAASC,GAA2BT,EAAG,CACnC,MAAO,CACH,MAAOA,EAAE,MACT,gBAAiBA,EAAE,gBACnB,wBAAyBA,EAAE,wBAC3B,IAAKA,EAAE,IACP,QAASA,EAAE,QACX,SAAUA,EAAE,SACZ,aAAcA,EAAE,YACnB,CACL,CAEA,SAASU,GAA4BC,EAAK,CACtC,SAASC,EAAoBC,EAAQ,CACjC,OAAOA,EAAO,GAAG,QAAQ,gBAAgB,IAC5C,CACDpC,EAAkBmC,EAAoBD,CAAG,EAAI,2BAA2B,CAC5E,CACA,IAAIG,GAAuB,GAE3B,SAASC,GAAgBF,EAAQ,CAAE,CAEnC,SAASG,GAAcC,EAAI,CACnBA,EAAG,SACHA,EAAG,aAAa,cAAcA,EAAG,QAAQ,EAEzCA,EAAG,QAAQ,gBAAgB,cAAcA,EAAG,GAAG,CAEvD,CAEA,SAASC,GAAmBD,EAAI,CAC5BA,EAAG,MAAM,OAAS,EAClB,IAAIE,EAAiBF,EAAG,MAAM,QAAf,EACXE,GACAH,GAAcC,CAAE,CAExB,CAEA,SAASG,GAAgBlK,EAAKmK,EAAUC,EAAc,CAClD,GAAID,IAAaC,EACb,OAAOpK,EAEX,GAAkBoK,EAAa,YAA3B,OACA,OAAO,KAEX,IAAIC,EAAKH,GAAgBlK,EAAKmK,EAAUC,EAAa,SAAS,EAC9D,OAAIC,IAAO,KACA,KAEJD,EAAa,SAASC,CAAE,CACnC,CACA,IAAIC,GAAqB,CAAA,EAEzB,SAASC,IAA4B,CACjC,OAAO,OAAO,KAAKC,CAAmB,EAAE,MAC5C,CAEA,SAASC,IAA4B,CACjC,IAAIJ,EAAK,CAAA,EACT,QAASK,KAAKF,EACNA,EAAoB,eAAeE,CAAC,GACpCL,EAAG,KAAKG,EAAoBE,EAAE,EAGtC,OAAOL,CACX,CACA,IAAIM,EAAgB,CAAA,EAEpB,SAASC,IAAsB,CAC3B,KAAOD,EAAc,QAAQ,CACzB,IAAIlB,EAAMkB,EAAc,MACxBlB,EAAI,GAAG,gBAAkB,GACzBA,EAAI,OAAW,CAClB,CACL,CACA,IAAIoB,EAAgB,OAEpB,SAASC,GAAiBC,EAAI,CAC1BF,EAAgBE,EACZJ,EAAc,QAAUE,GACxBA,EAAcD,EAAmB,CAEzC,CAEA,SAASI,IAAc,CACnB/M,EAAO,0BAA+BsM,GACtCtM,EAAO,0BAA+BwM,GACtCxM,EAAO,oBAAyB2M,GAChC3M,EAAO,iBAAsB6M,EACjC,CACA,IAAIN,EAAsB,CAAA,EAE1B,SAASS,GAAiBC,EAAQlL,EAAK,CAInC,IAHIA,IAAQ,QACRuH,EAAkB,6BAA6B,EAE5C2D,EAAO,WACVlL,EAAMkL,EAAO,OAAOlL,CAAG,EACvBkL,EAASA,EAAO,UAEpB,OAAOlL,CACX,CAEA,SAASmL,GAAqBD,EAAQlL,EAAK,CACvC,OAAAA,EAAMiL,GAAiBC,EAAQlL,CAAG,EAC3BwK,EAAoBxK,EAC/B,CAEA,SAASoL,GAAgBC,EAAWC,EAAQ,EACpC,CAACA,EAAO,SAAW,CAACA,EAAO,MAC3B7D,GAAmB,0CAA0C,EAEjE,IAAI8D,EAAkB,CAAC,CAACD,EAAO,aAC3BE,EAAc,CAAC,CAACF,EAAO,SAC3B,OAAIC,IAAoBC,GACpB/D,GAAmB,kDAAkD,EAEzE6D,EAAO,MAAQ,CACX,MAAO,CACf,EACWG,EAAgB,OAAO,OAAOJ,EAAW,CAC5C,GAAI,CACA,MAAOC,CACV,CACT,CAAK,CAAC,CACN,CAEA,SAASI,GAA+B1L,EAAK,CACzC,IAAI2L,EAAa,KAAK,WAAW3L,CAAG,EACpC,GAAI,CAAC2L,EACD,YAAK,WAAW3L,CAAG,EACZ,KAEX,IAAIsI,EAAqB6C,GAAqB,KAAK,gBAAiBQ,CAAU,EAC9E,GAAkBrD,IAAd,OAAkC,CAClC,GAAUA,EAAmB,GAAG,MAAM,QAAlC,EACA,OAAAA,EAAmB,GAAG,IAAMqD,EAC5BrD,EAAmB,GAAG,SAAWtI,EAC1BsI,EAAmB,MAAU,EAEpC,IAAI+B,EAAK/B,EAAmB,QAC5B,YAAK,WAAWtI,CAAG,EACZqK,CAEd,CAED,SAASuB,GAAoB,CACzB,OAAI,KAAK,eACER,GAAgB,KAAK,gBAAgB,kBAAmB,CAC3D,QAAS,KAAK,YACd,IAAKO,EACL,aAAc,KACd,SAAU3L,CAC1B,CAAa,EAEMoL,GAAgB,KAAK,gBAAgB,kBAAmB,CAC3D,QAAS,KACT,IAAKpL,CACrB,CAAa,CAER,CACD,IAAI6L,EAAa,KAAK,gBAAgB,cAAcF,CAAU,EAC1DG,EAA0BxB,GAAmBuB,GACjD,GAAI,CAACC,EACD,OAAOF,EAAkB,KAAK,IAAI,EAEtC,IAAIG,EACA,KAAK,QACLA,EAASD,EAAwB,iBAEjCC,EAASD,EAAwB,YAErC,IAAIE,EAAK9B,GAAgByB,EAAY,KAAK,gBAAiBI,EAAO,eAAe,EACjF,OAAIC,IAAO,KACAJ,EAAkB,KAAK,IAAI,EAElC,KAAK,eACER,GAAgBW,EAAO,gBAAgB,kBAAmB,CAC7D,QAASA,EACT,IAAKC,EACL,aAAc,KACd,SAAUhM,CACtB,CAAS,EAEMoL,GAAgBW,EAAO,gBAAgB,kBAAmB,CAC7D,QAASA,EACT,IAAKC,CACjB,CAAS,CAET,CAEA,SAASP,EAAgB9B,EAAQ,CAC7B,OAAoB,OAAO,sBAAvB,aACA8B,EAAkB9B,GAAUA,EACrBA,IAEXC,GAAuB,IAAI,qBAAqB1G,GAAQ,CACpD8G,GAAmB9G,EAAK,EAAE,CAClC,CAAK,EACDuI,EAAkB9B,GAAU,CACxB,IAAII,EAAKJ,EAAO,GACZ6B,EAAc,CAAC,CAACzB,EAAG,SACvB,GAAIyB,EAAa,CACb,IAAItI,EAAO,CACP,GAAI6G,CACpB,EACYH,GAAqB,SAASD,EAAQzG,EAAMyG,CAAM,CACrD,CACD,OAAOA,CACf,EACIE,GAAkBF,GAAUC,GAAqB,WAAWD,CAAM,EAC3D8B,EAAgB9B,CAAM,EACjC,CAEA,SAASsC,IAAoB,CAIzB,GAHK,KAAK,GAAG,KACTzC,GAA4B,IAAI,EAEhC,KAAK,GAAG,wBACR,YAAK,GAAG,MAAM,OAAS,EAChB,KAEP,IAAI0C,EAAQT,EAAgB,OAAO,OAAO,OAAO,eAAe,IAAI,EAAG,CACnE,GAAI,CACA,MAAOlC,GAA2B,KAAK,EAAE,CAC5C,CACJ,CAAA,CAAC,EACF,OAAA2C,EAAM,GAAG,MAAM,OAAS,EACxBA,EAAM,GAAG,gBAAkB,GACpBA,CAEf,CAEA,SAASC,IAAqB,CACrB,KAAK,GAAG,KACT3C,GAA4B,IAAI,EAEhC,KAAK,GAAG,iBAAmB,CAAC,KAAK,GAAG,yBACpCjC,EAAkB,uCAAuC,EAE7DsC,GAAgB,IAAI,EACpBG,GAAmB,KAAK,EAAE,EACrB,KAAK,GAAG,0BACT,KAAK,GAAG,SAAW,OACnB,KAAK,GAAG,IAAM,OAEtB,CAEA,SAASoC,IAAwB,CAC7B,MAAO,CAAC,KAAK,GAAG,GACpB,CAEA,SAASC,IAA0B,CAC/B,OAAK,KAAK,GAAG,KACT7C,GAA4B,IAAI,EAEhC,KAAK,GAAG,iBAAmB,CAAC,KAAK,GAAG,yBACpCjC,EAAkB,uCAAuC,EAE7DoD,EAAc,KAAK,IAAI,EACnBA,EAAc,SAAW,GAAKE,GAC9BA,EAAcD,EAAmB,EAErC,KAAK,GAAG,gBAAkB,GACnB,IACX,CAEA,SAAS0B,IAAmB,CACxBpD,EAAY,UAAU,UAAeF,GACrCE,EAAY,UAAU,MAAW+C,GACjC/C,EAAY,UAAU,OAAYiD,GAClCjD,EAAY,UAAU,UAAekD,GACrClD,EAAY,UAAU,YAAiBmD,EAC3C,CAEA,SAASnD,GAAc,CAAE,CAEzB,SAASqD,GAAoBC,EAAOC,EAAYC,EAAW,CACvD,GAAkBF,EAAMC,GAAY,gBAAhC,OAA+C,CAC/C,IAAIE,EAAWH,EAAMC,GACrBD,EAAMC,GAAc,UAAW,CAC3B,OAAKD,EAAMC,GAAY,cAAc,eAAe,UAAU,MAAM,GAChElF,EAAkB,aAAemF,EAAY,iDAAmD,UAAU,OAAS,uBAAyBF,EAAMC,GAAY,cAAgB,IAAI,EAE/KD,EAAMC,GAAY,cAAc,UAAU,QAAQ,MAAM,KAAM,SAAS,CAC1F,EACQD,EAAMC,GAAY,cAAgB,GAClCD,EAAMC,GAAY,cAAcE,EAAS,UAAYA,CACxD,CACL,CAEA,SAASC,GAAmB9G,EAAMjB,EAAOgI,EAAc,CAC/C5O,EAAO,eAAe6H,CAAI,IACR+G,IAAd,QAA4C5O,EAAO6H,GAAM,gBAA3B,QAA0D7H,EAAO6H,GAAM,cAAc+G,KAAzC,SAC1EtF,EAAkB,gCAAkCzB,EAAO,SAAS,EAExEyG,GAAoBtO,EAAQ6H,EAAMA,CAAI,EAClC7H,EAAO,eAAe4O,CAAY,GAClCtF,EAAkB,uFAAyFsF,EAAe,IAAI,EAElI5O,EAAO6H,GAAM,cAAc+G,GAAgBhI,IAE3C5G,EAAO6H,GAAQjB,EACGgI,IAAd,SACA5O,EAAO6H,GAAM,aAAe+G,GAGxC,CAEA,SAASC,GAAgBhH,EAAMiH,EAAaC,EAAmBC,EAAeC,EAAWC,EAAeC,EAAQC,EAAU,CACtH,KAAK,KAAOvH,EACZ,KAAK,YAAciH,EACnB,KAAK,kBAAoBC,EACzB,KAAK,cAAgBC,EACrB,KAAK,UAAYC,EACjB,KAAK,cAAgBC,EACrB,KAAK,OAASC,EACd,KAAK,SAAWC,EAChB,KAAK,qBAAuB,CAAE,CAClC,CAEA,SAASC,GAActN,EAAKmK,EAAUC,EAAc,CAChD,KAAOD,IAAaC,GACXD,EAAS,QACV5C,EAAkB,gCAAkC6C,EAAa,KAAO,wBAA0BD,EAAS,IAAI,EAEnHnK,EAAMmK,EAAS,OAAOnK,CAAG,EACzBmK,EAAWA,EAAS,UAExB,OAAOnK,CACX,CAEA,SAASuN,GAAoC1E,EAAac,EAAQ,CAC9D,GAAIA,IAAW,KACX,OAAI,KAAK,aACLpC,EAAkB,uBAAyB,KAAK,IAAI,EAEjD,EAENoC,EAAO,IACRpC,EAAkB,gBAAkBiG,GAAW7D,CAAM,EAAI,UAAY,KAAK,IAAI,EAE7EA,EAAO,GAAG,KACXpC,EAAkB,mDAAqD,KAAK,IAAI,EAEpF,IAAIkG,EAAc9D,EAAO,GAAG,QAAQ,gBAChC3J,EAAMsN,GAAc3D,EAAO,GAAG,IAAK8D,EAAa,KAAK,eAAe,EACxE,OAAOzN,CACX,CAEA,SAAS0N,GAAyB7E,EAAac,EAAQ,CACnD,IAAI3J,EACJ,GAAI2J,IAAW,KAIX,OAHI,KAAK,aACLpC,EAAkB,uBAAyB,KAAK,IAAI,EAEpD,KAAK,gBACLvH,EAAM,KAAK,iBACP6I,IAAgB,MAChBA,EAAY,KAAK,KAAK,cAAe7I,CAAG,EAErCA,GAEA,EAGV2J,EAAO,IACRpC,EAAkB,gBAAkBiG,GAAW7D,CAAM,EAAI,UAAY,KAAK,IAAI,EAE7EA,EAAO,GAAG,KACXpC,EAAkB,mDAAqD,KAAK,IAAI,EAEhF,CAAC,KAAK,SAAWoC,EAAO,GAAG,QAAQ,SACnCpC,EAAkB,oCAAsCoC,EAAO,GAAG,aAAeA,EAAO,GAAG,aAAa,KAAOA,EAAO,GAAG,QAAQ,MAAQ,sBAAwB,KAAK,IAAI,EAE9K,IAAI8D,EAAc9D,EAAO,GAAG,QAAQ,gBAEpC,GADA3J,EAAMsN,GAAc3D,EAAO,GAAG,IAAK8D,EAAa,KAAK,eAAe,EAChE,KAAK,eAIL,OAHkB9D,EAAO,GAAG,WAAxB,QACApC,EAAkB,iDAAiD,EAE/D,KAAK,cAAa,CACtB,IAAK,GACGoC,EAAO,GAAG,eAAiB,KAC3B3J,EAAM2J,EAAO,GAAG,SAEhBpC,EAAkB,oCAAsCoC,EAAO,GAAG,aAAeA,EAAO,GAAG,aAAa,KAAOA,EAAO,GAAG,QAAQ,MAAQ,sBAAwB,KAAK,IAAI,EAE9K,MACJ,IAAK,GACD3J,EAAM2J,EAAO,GAAG,SAChB,MACJ,IAAK,GACD,GAAIA,EAAO,GAAG,eAAiB,KAC3B3J,EAAM2J,EAAO,GAAG,aACb,CACH,IAAIgE,EAAehE,EAAO,QAC1B3J,EAAM,KAAK,SAASA,EAAK4N,GAAM,SAAS,UAAW,CAC/CD,EAAa,OAAW,CAC3B,CAAA,CAAC,EACE9E,IAAgB,MAChBA,EAAY,KAAK,KAAK,cAAe7I,CAAG,CAE/C,CACD,MACJ,QACIuH,EAAkB,6BAA6B,CACtD,CAEL,OAAOvH,CACX,CAEA,SAAS6N,GAAuChF,EAAac,EAAQ,CACjE,GAAIA,IAAW,KACX,OAAI,KAAK,aACLpC,EAAkB,uBAAyB,KAAK,IAAI,EAEjD,EAENoC,EAAO,IACRpC,EAAkB,gBAAkBiG,GAAW7D,CAAM,EAAI,UAAY,KAAK,IAAI,EAE7EA,EAAO,GAAG,KACXpC,EAAkB,mDAAqD,KAAK,IAAI,EAEhFoC,EAAO,GAAG,QAAQ,SAClBpC,EAAkB,mCAAqCoC,EAAO,GAAG,QAAQ,KAAO,sBAAwB,KAAK,IAAI,EAErH,IAAI8D,EAAc9D,EAAO,GAAG,QAAQ,gBAChC3J,EAAMsN,GAAc3D,EAAO,GAAG,IAAK8D,EAAa,KAAK,eAAe,EACxE,OAAOzN,CACX,CAEA,SAAS8N,GAA2B/E,EAAS,CACzC,OAAO,KAAK,aAAgB7H,EAAO6H,GAAW,EAAE,CACpD,CAEA,SAASgF,GAA6B/N,EAAK,CACvC,OAAI,KAAK,gBACLA,EAAM,KAAK,cAAcA,CAAG,GAEzBA,CACX,CAEA,SAASgO,GAA6BhO,EAAK,CACnC,KAAK,eACL,KAAK,cAAcA,CAAG,CAE9B,CAEA,SAASiO,GAA+BtE,EAAQ,CACxCA,IAAW,MACXA,EAAO,OAAW,CAE1B,CAEA,SAASuE,IAAyB,CAC9BC,EAAkB,UAAU,WAAaJ,GACzCI,EAAkB,UAAU,WAAaH,GACzCG,EAAkB,UAAU,eAAoB,EAChDA,EAAkB,UAAU,qBAA0BL,GACtDK,EAAkB,UAAU,aAAkBF,GAC9CE,EAAkB,UAAU,aAAkBzC,EAClD,CAEA,SAASyC,EAAkBrI,EAAMsI,EAAiBC,EAAaC,EAASC,EAAgBC,EAAaC,EAAeC,EAAeC,EAAgBC,EAAU3B,EAAe,CACxK,KAAK,KAAOnH,EACZ,KAAK,gBAAkBsI,EACvB,KAAK,YAAcC,EACnB,KAAK,QAAUC,EACf,KAAK,eAAiBC,EACtB,KAAK,YAAcC,EACnB,KAAK,cAAgBC,EACrB,KAAK,cAAgBC,EACrB,KAAK,eAAiBC,EACtB,KAAK,SAAWC,EAChB,KAAK,cAAgB3B,EACjB,CAACsB,GAAkBH,EAAgB,YAAc,OAC7CE,GACA,KAAK,WAAgBf,GACrB,KAAK,mBAAqB,OAE1B,KAAK,WAAgBM,GACrB,KAAK,mBAAqB,MAG9B,KAAK,WAAgBH,EAE7B,CAEA,SAASmB,GAAoB/I,EAAMjB,EAAOgI,EAAc,CAC/C5O,EAAO,eAAe6H,CAAI,GAC3B2B,GAAmB,qCAAqC,EAE1CxJ,EAAO6H,GAAM,gBAA3B,QAA0D+G,IAAd,OAC5C5O,EAAO6H,GAAM,cAAc+G,GAAgBhI,GAE3C5G,EAAO6H,GAAQjB,EACf5G,EAAO6H,GAAM,SAAW+G,EAEhC,CAEA,SAASiC,GAAcC,EAAK/O,EAAKgP,EAAM,CACnC,IAAInI,EAAI5I,EAAO,WAAa8Q,GAC5B,OAAOC,GAAQA,EAAK,OAASnI,EAAE,MAAM,KAAM,CAAC7G,CAAG,EAAE,OAAOgP,CAAI,CAAC,EAAInI,EAAE,KAAK,KAAM7G,CAAG,CACrF,CACA,IAAIiP,GAAkB,CAAA,EAEtB,SAASC,EAAkBC,EAAS,CAChC,IAAIjL,EAAO+K,GAAgBE,GAC3B,OAAKjL,IACGiL,GAAWF,GAAgB,SAAQA,GAAgB,OAASE,EAAU,GAC1EF,GAAgBE,GAAWjL,EAAO1C,GAAU,IAAI2N,CAAO,GAEpDjL,CACX,CAEA,SAASkL,GAAQL,EAAK/O,EAAKgP,EAAM,CAC7B,GAAID,EAAI,SAAS,GAAG,EAChB,OAAOD,GAAcC,EAAK/O,EAAKgP,CAAI,EAEvC,IAAIK,EAAMH,EAAkBlP,CAAG,EAAE,MAAM,KAAMgP,CAAI,EACjD,OAAOK,CACX,CAEA,SAASC,GAAaP,EAAK/O,EAAK,CAC5B,IAAIuP,EAAW,CAAA,EACf,OAAO,UAAW,CACd,OAAAA,EAAS,OAAS,EAClB,OAAO,OAAOA,EAAU,SAAS,EAC1BH,GAAQL,EAAK/O,EAAKuP,CAAQ,CACpC,CACL,CAEA,SAASC,EAAwBC,EAAWC,EAAa,CACrDD,EAAYpJ,EAAiBoJ,CAAS,EAEtC,SAASE,GAAgB,CACrB,OAAIF,EAAU,SAAS,GAAG,EACfH,GAAaG,EAAWC,CAAW,EAEvCR,EAAkBQ,CAAW,CACvC,CACD,IAAIE,EAAKD,IACT,OAAI,OAAOC,GAAM,YACbrI,EAAkB,2CAA6CkI,EAAY,KAAOC,CAAW,EAE1FE,CACX,CACA,IAAIC,GAAmB,OAEvB,SAASC,GAAYtL,EAAM,CACvB,IAAIxE,EAAM+P,GAAevL,CAAI,EACzB6F,EAAKhE,EAAiBrG,CAAG,EAC7B,OAAAgQ,EAAMhQ,CAAG,EACFqK,CACX,CAEA,SAAS4F,GAAsB7I,EAAS8I,EAAO,CAC3C,IAAIC,EAAe,CAAA,EACfC,EAAO,CAAA,EAEX,SAASC,EAAM7L,EAAM,CACjB,GAAI,CAAA4L,EAAK5L,IAGL,CAAAgC,EAAgBhC,GAGpB,IAAIiC,GAAiBjC,GAAO,CACxBiC,GAAiBjC,GAAM,QAAQ6L,CAAK,EACpC,MACH,CACDF,EAAa,KAAK3L,CAAI,EACtB4L,EAAK5L,GAAQ,GAChB,CACD,MAAA0L,EAAM,QAAQG,CAAK,EACb,IAAIR,GAAiBzI,EAAU,KAAO+I,EAAa,IAAIL,EAAW,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAC1F,CAEA,SAASQ,GAAwBjI,EAASkI,EAAgBC,EAAqBC,EAAkBC,EAAwBvD,EAAewD,EAAiBvD,EAAQwD,EAAmBvD,EAAUvH,EAAM+K,EAAqB5D,EAAe,CACpOnH,EAAOO,EAAiBP,CAAI,EAC5BqH,EAAgBqC,EAAwBkB,EAAwBvD,CAAa,EACzEC,IACAA,EAASoC,EAAwBmB,EAAiBvD,CAAM,GAExDC,IACAA,EAAWmC,EAAwBoB,EAAmBvD,CAAQ,GAElEJ,EAAgBuC,EAAwBqB,EAAqB5D,CAAa,EAC1E,IAAI6D,EAAoBlK,GAAsBd,CAAI,EAClD8G,GAAmBkE,EAAmB,UAAW,CAC7Cb,GAAsB,oBAAsBnK,EAAO,wBAAyB,CAAC2K,CAAgB,CAAC,CACtG,CAAK,EACD/I,EAA8B,CAACW,EAASkI,EAAgBC,CAAmB,EAAGC,EAAmB,CAACA,CAAgB,EAAI,GAAI,SAASM,EAAM,CACrIA,EAAOA,EAAK,GACZ,IAAI7D,EACA8D,EACAP,GACAvD,EAAY6D,EAAK,gBACjBC,EAAgB9D,EAAU,mBAE1B8D,EAAgB9H,EAAY,UAEhC,IAAI6D,EAAcjG,GAAoBgK,EAAmB,UAAW,CAChE,GAAI,OAAO,eAAe,IAAI,IAAM9D,GAChC,MAAM,IAAI1F,EAAa,0BAA4BxB,CAAI,EAE3D,GAAkBsI,EAAgB,mBAA9B,OACA,MAAM,IAAI9G,EAAaxB,EAAO,gCAAgC,EAElE,IAAIiB,GAAOqH,EAAgB,iBAAiB,UAAU,QACtD,GAAkBrH,KAAd,OACA,MAAM,IAAIO,EAAa,2BAA6BxB,EAAO,uCAAyC,UAAU,OAAS,iBAAmB,OAAO,KAAKsI,EAAgB,gBAAgB,EAAE,SAAU,EAAG,uBAAuB,EAEhO,OAAOrH,GAAK,MAAM,KAAM,SAAS,CAC7C,CAAS,EACGiG,GAAoB,OAAO,OAAOgE,EAAe,CACjD,YAAa,CACT,MAAOjE,CACV,CACb,CAAS,EACDA,EAAY,UAAYC,GACxB,IAAIoB,EAAkB,IAAItB,GAAgBhH,EAAMiH,EAAaC,GAAmBC,EAAeC,EAAWC,EAAeC,EAAQC,CAAQ,EACrI4D,GAAqB,IAAI9C,EAAkBrI,EAAMsI,EAAiB,GAAM,GAAO,EAAK,EACpF8C,GAAmB,IAAI/C,EAAkBrI,EAAO,IAAKsI,EAAiB,GAAO,GAAO,EAAK,EACzF+C,GAAwB,IAAIhD,EAAkBrI,EAAO,UAAWsI,EAAiB,GAAO,GAAM,EAAK,EACvG,OAAA9D,GAAmBjC,GAAW,CAC1B,YAAa6I,GACb,iBAAkBC,EAC9B,EACQtC,GAAoBiC,EAAmB/D,CAAW,EAC3C,CAACkE,GAAoBC,GAAkBC,EAAqB,CAC3E,CAAK,CACL,CAEA,SAASC,GAAoBC,EAAOC,EAAc,CAE9C,QADIC,EAAQ,CAAA,EACHhR,EAAI,EAAGA,EAAI8Q,EAAO9Q,IACvBgR,EAAM,KAAKpQ,EAAQmQ,EAAe/Q,EAAI,GAAK,EAAE,EAEjD,OAAOgR,CACX,CAEA,SAASC,GAAe3I,EAAa,CACjC,KAAOA,EAAY,QAAQ,CACvB,IAAI7I,EAAM6I,EAAY,MAClB4I,EAAM5I,EAAY,MACtB4I,EAAIzR,CAAG,CACV,CACL,CAEA,SAAS0R,GAAK3E,EAAa4E,EAAc,CACrC,GAAI,EAAE5E,aAAuB,UACzB,MAAM,IAAI,UAAU,qCAAuC,OAAOA,EAAc,0BAA0B,EAE9G,IAAI6E,EAAQ9K,GAAoBiG,EAAY,MAAQ,sBAAuB,UAAW,CAAA,CAAE,EACxF6E,EAAM,UAAY7E,EAAY,UAC9B,IAAItD,EAAM,IAAImI,EACVC,EAAI9E,EAAY,MAAMtD,EAAKkI,CAAY,EAC3C,OAAOE,aAAa,OAASA,EAAIpI,CACrC,CAEA,SAASqI,GAAqBpF,EAAWqF,EAAUC,EAAWC,EAAgBC,EAAe,CACzF,IAAIC,EAAWJ,EAAS,OACpBI,EAAW,GACX5K,EAAkB,gFAAgF,EAItG,QAFI6K,EAAoBL,EAAS,KAAO,MAAQC,IAAc,KAC1DK,EAAuB,GAClB9R,EAAI,EAAGA,EAAIwR,EAAS,OAAQ,EAAExR,EACnC,GAAIwR,EAASxR,KAAO,MAAQwR,EAASxR,GAAG,qBAAuB,OAAW,CACtE8R,EAAuB,GACvB,KACH,CAKL,QAHIC,EAAUP,EAAS,GAAG,OAAS,OAC/BQ,EAAW,GACXC,EAAgB,GACXjS,EAAI,EAAGA,EAAI4R,EAAW,EAAG,EAAE5R,EAChCgS,IAAahS,IAAM,EAAI,KAAO,IAAM,MAAQA,EAC5CiS,IAAkBjS,IAAM,EAAI,KAAO,IAAM,MAAQA,EAAI,QAEzD,IAAIkS,EAAgB,mBAAqB7L,GAAsB8F,CAAS,EAAI,IAAM6F,EAAW;AAAA,4BAAyCJ,EAAW,GAAK;AAAA,8BAA2CzF,EAAY,8DAAgEyF,EAAW,GAAK;AAAA;AAAA,EACzRE,IACAI,GAAiB;AAAA,GAErB,IAAIC,EAAYL,EAAuB,cAAgB,OACnDM,EAAQ,CAAC,oBAAqB,UAAW,KAAM,iBAAkB,UAAW,YAAY,EACxFC,EAAQ,CAACrL,EAAmB0K,EAAgBC,EAAeV,GAAgBO,EAAS,GAAIA,EAAS,EAAE,EACnGK,IACAK,GAAiB,yCAA2CC,EAAY;AAAA,GAE5E,QAASnS,EAAI,EAAGA,EAAI4R,EAAW,EAAG,EAAE5R,EAChCkS,GAAiB,UAAYlS,EAAI,kBAAoBA,EAAI,eAAiBmS,EAAY,QAAUnS,EAAI,SAAWwR,EAASxR,EAAI,GAAG,KAAO;AAAA,EACtIoS,EAAM,KAAK,UAAYpS,CAAC,EACxBqS,EAAM,KAAKb,EAASxR,EAAI,EAAE,EAM9B,GAJI6R,IACAI,EAAgB,aAAeA,EAAc,OAAS,EAAI,KAAO,IAAMA,GAE3EC,IAAkBH,EAAU,YAAc,IAAM,cAAgBE,EAAc,OAAS,EAAI,KAAO,IAAMA,EAAgB;AAAA,EACpHH,EACAI,GAAiB;AAAA,MAEjB,SAASlS,EAAI6R,EAAoB,EAAI,EAAG7R,EAAIwR,EAAS,OAAQ,EAAExR,EAAG,CAC9D,IAAIsS,EAAYtS,IAAM,EAAI,YAAc,OAASA,EAAI,GAAK,QACtDwR,EAASxR,GAAG,qBAAuB,OACnCkS,GAAiBI,EAAY,SAAWA,EAAY,SAAWd,EAASxR,GAAG,KAAO;AAAA,EAClFoS,EAAM,KAAKE,EAAY,OAAO,EAC9BD,EAAM,KAAKb,EAASxR,GAAG,kBAAkB,EAEhD,CAED+R,IACAG,GAAiB;AAAA;AAAA,GAErBA,GAAiB;AAAA,EACjBE,EAAM,KAAKF,CAAa,EACxB,IAAIK,EAAkBpB,GAAK,SAAUiB,CAAK,EAAE,MAAM,KAAMC,CAAK,EAC7D,OAAOE,CACX,CAEA,SAASC,GAAoCC,EAAcb,EAAUc,EAAiBC,EAAkBC,EAASxE,EAAgB,CAC7H3P,GAAOmT,EAAW,CAAC,EACnB,IAAIiB,EAAchC,GAAoBe,EAAUc,CAAe,EAC/DE,EAAU3D,EAAwB0D,EAAkBC,CAAO,EAC3DzL,EAA8B,CAAA,EAAI,CAACsL,CAAY,EAAG,SAAShB,EAAW,CAClEA,EAAYA,EAAU,GACtB,IAAItF,EAAY,eAAiBsF,EAAU,KAI3C,GAHkBA,EAAU,gBAAgB,mBAAxC,SACAA,EAAU,gBAAgB,iBAAmB,CAAE,GAEjCA,EAAU,gBAAgB,iBAAiBG,EAAW,KAApE,OACA,MAAM,IAAI7K,EAAa,+EAAiF6K,EAAW,GAAK,gBAAkBH,EAAU,KAAO,qGAAqG,EAEpQ,OAAAA,EAAU,gBAAgB,iBAAiBG,EAAW,GAAK,IAAM,CAC7DlC,GAAsB,oBAAsB+B,EAAU,KAAO,wBAAyBoB,CAAW,CAC7G,EACQ1L,EAA8B,CAAE,EAAE0L,EAAa,SAASrB,EAAU,CAC9D,OAAAA,EAAS,OAAO,EAAG,EAAG,IAAI,EAC1BC,EAAU,gBAAgB,iBAAiBG,EAAW,GAAKL,GAAqBpF,EAAWqF,EAAU,KAAMoB,EAASxE,CAAc,EAC3H,CAAE,CACrB,CAAS,EACM,CAAE,CACjB,CAAK,CACL,CAEA,SAAS0E,GAAiCL,EAAcvG,EAAY0F,EAAUc,EAAiBC,EAAkBI,EAAYC,EAASC,EAAe,CACjJ,IAAIJ,EAAchC,GAAoBe,EAAUc,CAAe,EAC/DxG,EAAapG,EAAiBoG,CAAU,EACxC6G,EAAa9D,EAAwB0D,EAAkBI,CAAU,EACjE5L,EAA8B,CAAA,EAAI,CAACsL,CAAY,EAAG,SAAShB,EAAW,CAClEA,EAAYA,EAAU,GACtB,IAAItF,EAAYsF,EAAU,KAAO,IAAMvF,EACnCA,EAAW,WAAW,IAAI,IAC1BA,EAAa,OAAOA,EAAW,UAAU,CAAC,IAE1C+G,GACAxB,EAAU,gBAAgB,qBAAqB,KAAKvF,CAAU,EAGlE,SAASgH,GAAsB,CAC3BxD,GAAsB,eAAiBvD,EAAY,wBAAyB0G,CAAW,CAC1F,CACD,IAAI5G,EAAQwF,EAAU,gBAAgB,kBAClC0B,EAASlH,EAAMC,GACnB,OAAkBiH,IAAd,QAAsCA,EAAO,gBAArB,QAAsCA,EAAO,YAAc1B,EAAU,MAAQ0B,EAAO,WAAavB,EAAW,GACpIsB,EAAoB,SAAWtB,EAAW,EAC1CsB,EAAoB,UAAYzB,EAAU,KAC1CxF,EAAMC,GAAcgH,IAEpBlH,GAAoBC,EAAOC,EAAYC,CAAS,EAChDF,EAAMC,GAAY,cAAc0F,EAAW,GAAKsB,GAEpD/L,EAA8B,CAAE,EAAE0L,EAAa,SAASrB,EAAU,CAC9D,IAAI4B,EAAiB7B,GAAqBpF,EAAWqF,EAAUC,EAAWsB,EAAYC,CAAO,EAC7F,OAAkB/G,EAAMC,GAAY,gBAAhC,QACAkH,EAAe,SAAWxB,EAAW,EACrC3F,EAAMC,GAAckH,GAEpBnH,EAAMC,GAAY,cAAc0F,EAAW,GAAKwB,EAE7C,CAAE,CACrB,CAAS,EACM,CAAE,CACjB,CAAK,CACL,CACA,IAAIC,GAAkB,CAAA,EAClBC,EAAqB,CAAC,CAAA,EAAI,CAC1B,MAAO,MACX,EAAG,CACC,MAAO,IACX,EAAG,CACC,MAAO,EACX,EAAG,CACC,MAAO,EACX,CAAC,EAED,SAASC,GAAenK,EAAQ,CACxBA,EAAS,GAAW,EAAEkK,EAAmBlK,GAAQ,WAAnC,IACdkK,EAAmBlK,GAAU,OAC7BiK,GAAgB,KAAKjK,CAAM,EAEnC,CAEA,SAASoK,IAAsB,CAE3B,QADI1C,EAAQ,EACH9Q,EAAI,EAAGA,EAAIsT,EAAmB,OAAQ,EAAEtT,EACzCsT,EAAmBtT,KAAO,QAC1B,EAAE8Q,EAGV,OAAOA,CACX,CAEA,SAAS2C,IAAkB,CACvB,QAASzT,EAAI,EAAGA,EAAIsT,EAAmB,OAAQ,EAAEtT,EAC7C,GAAIsT,EAAmBtT,KAAO,OAC1B,OAAOsT,EAAmBtT,GAGlC,OAAO,IACX,CAEA,SAAS0T,IAAa,CAClBhW,EAAO,oBAAyB8V,GAChC9V,EAAO,gBAAqB+V,EAChC,CACA,IAAIpG,GAAQ,CACR,QAASjE,IACAA,GACDpC,EAAkB,oCAAsCoC,CAAM,EAE3DkK,EAAmBlK,GAAQ,OAEtC,SAAU9E,GAAS,CACf,OAAQA,EAAK,CACT,KAAK,OACD,MAAO,GACX,KAAK,KACD,MAAO,GACX,IAAK,GACD,MAAO,GACX,IAAK,GACD,MAAO,GACX,QAAS,CACL,IAAI8E,EAASiK,GAAgB,OAASA,GAAgB,IAAK,EAAGC,EAAmB,OACjF,OAAAA,EAAmBlK,GAAU,CACzB,SAAU,EACV,MAAO9E,CAC3B,EACuB8E,CACV,CACJ,CACJ,CACL,EAEA,SAASuK,GAAwB7L,EAASvC,EAAM,CAC5CA,EAAOO,EAAiBP,CAAI,EAC5BmC,EAAaI,EAAS,CAClB,KAAMvC,EACN,aAAgB,SAAS6D,EAAQ,CAC7B,IAAIU,EAAKuD,GAAM,QAAQjE,CAAM,EAC7B,OAAAmK,GAAenK,CAAM,EACdU,CACV,EACD,WAAc,SAASxB,EAAahE,EAAO,CACvC,OAAO+I,GAAM,SAAS/I,CAAK,CAC9B,EACD,eAAkB,EAClB,qBAAwBiJ,GACxB,mBAAoB,IAC5B,CAAK,CACL,CAEA,SAASN,GAAW2G,EAAG,CACnB,GAAIA,IAAM,KACN,MAAO,OAEX,IAAIC,EAAI,OAAOD,EACf,OAAIC,IAAM,UAAYA,IAAM,SAAWA,IAAM,WAClCD,EAAE,SAAU,EAEZ,GAAKA,CAEpB,CAEA,SAASE,GAA0BvO,EAAM6C,EAAO,CAC5C,OAAQA,EAAK,CACT,IAAK,GACD,OAAO,SAASI,EAAS,CACrB,OAAO,KAAK,aAAgB3H,GAAQ2H,GAAW,EAAE,CACjE,EACQ,IAAK,GACD,OAAO,SAASA,EAAS,CACrB,OAAO,KAAK,aAAgB1H,GAAQ0H,GAAW,EAAE,CACjE,EACQ,QACI,MAAM,IAAI,UAAU,uBAAyBjD,CAAI,CACxD,CACL,CAEA,SAASwO,GAAwBjM,EAASvC,EAAM1B,EAAM,CAClD,IAAIuE,EAAQ1C,GAAiB7B,CAAI,EACjC0B,EAAOO,EAAiBP,CAAI,EAC5BmC,EAAaI,EAAS,CAClB,KAAMvC,EACN,aAAgB,SAASjB,EAAO,CAC5B,OAAOA,CACV,EACD,WAAc,SAASgE,EAAahE,EAAO,CACvC,OAAOA,CACV,EACD,eAAkB,EAClB,qBAAwBwP,GAA0BvO,EAAM6C,CAAK,EAC7D,mBAAoB,IAC5B,CAAK,CACL,CAEA,SAAS4L,GAA4BzO,EAAM6C,EAAO6L,EAAQ,CACtD,OAAQ7L,EAAK,CACT,IAAK,GACD,OAAO6L,EAAS,SAA2BzL,EAAS,CAChD,OAAOhI,EAAMgI,EAC7B,EAAgB,SAA2BA,EAAS,CACpC,OAAO9I,EAAO8I,EAC9B,EACQ,IAAK,GACD,OAAOyL,EAAS,SAA4BzL,EAAS,CACjD,OAAO/H,EAAO+H,GAAW,EACzC,EAAgB,SAA4BA,EAAS,CACrC,OAAO9H,GAAQ8H,GAAW,EAC1C,EACQ,IAAK,GACD,OAAOyL,EAAS,SAA4BzL,EAAS,CACjD,OAAO7H,EAAO6H,GAAW,EACzC,EAAgB,SAA4BA,EAAS,CACrC,OAAO5H,EAAQ4H,GAAW,EAC1C,EACQ,QACI,MAAM,IAAI,UAAU,yBAA2BjD,CAAI,CAC1D,CACL,CAEA,SAAS2O,GAA0B5O,EAAeC,EAAM1B,EAAM2B,EAAUC,EAAU,CAC9EF,EAAOO,EAAiBP,CAAI,EAI5B,IAAI6C,EAAQ1C,GAAiB7B,CAAI,EAC7BsQ,EAAe7P,GAASA,EAC5B,GAAIkB,IAAa,EAAG,CAChB,IAAI4O,EAAW,GAAK,EAAIvQ,EACxBsQ,EAAe7P,GAASA,GAAS8P,IAAaA,CACjD,CACD,IAAIC,EAAiB9O,EAAK,SAAS,UAAU,EACzC+O,EAAkB,CAAChQ,EAAOiQ,IAAe,CAAA,EACzCC,EACAH,EACAG,EAAa,SAASlM,EAAahE,EAAO,CACtC,OAAAgQ,EAAgBhQ,EAAO,KAAK,IAAI,EACzBA,IAAU,CACpB,EAEDkQ,EAAa,SAASlM,EAAahE,EAAO,CACtC,OAAAgQ,EAAgBhQ,EAAO,KAAK,IAAI,EACzBA,CACV,EAELoD,EAAapC,EAAe,CACxB,KAAMC,EACN,aAAgB4O,EAChB,WAAcK,EACd,eAAkB,EAClB,qBAAwBR,GAA4BzO,EAAM6C,EAAO5C,IAAa,CAAC,EAC/E,mBAAoB,IAC5B,CAAK,CACL,CAEA,SAASiP,GAA8B3M,EAAS4M,EAAenP,EAAM,CACjE,IAAIoP,EAAc,CAAC,UAAW,WAAY,WAAY,YAAa,WAAY,YAAa,aAAc,YAAY,EAClHC,EAAKD,EAAYD,GAErB,SAASG,EAAiBzL,EAAQ,CAC9BA,EAASA,GAAU,EACnB,IAAIxJ,EAAOgB,EACPiD,EAAOjE,EAAKwJ,GACZ0L,EAAOlV,EAAKwJ,EAAS,GACzB,OAAO,IAAIwL,EAAGrU,GAAQuU,EAAMjR,CAAI,CACnC,CACD0B,EAAOO,EAAiBP,CAAI,EAC5BmC,EAAaI,EAAS,CAClB,KAAMvC,EACN,aAAgBsP,EAChB,eAAkB,EAClB,qBAAwBA,CAChC,EAAO,CACC,6BAA8B,EACtC,CAAK,CACL,CAEA,SAASE,GAA6BjN,EAASvC,EAAM,CACjDA,EAAOO,EAAiBP,CAAI,EAC5B,IAAIyP,EAAkBzP,IAAS,cAC/BmC,EAAaI,EAAS,CAClB,KAAMvC,EACN,aAAgB,SAASjB,EAAO,CAC5B,IAAI2Q,EAASrU,EAAQ0D,GAAS,GAC1B4Q,EAAU5Q,EAAQ,EAClBnF,EACJ,GAAI6V,EAEA,QADIG,EAAiBD,EACZlV,EAAI,EAAGA,GAAKiV,EAAQ,EAAEjV,EAAG,CAC9B,IAAIoV,EAAiBF,EAAUlV,EAC/B,GAAIA,GAAKiV,GAAUvV,EAAO0V,IAAmB,EAAG,CAC5C,IAAIC,EAAUD,EAAiBD,EAC3BG,EAAgB9V,GAAa2V,EAAgBE,CAAO,EACpDlW,IAAQ,OACRA,EAAMmW,GAENnW,GAAO,OAAO,aAAa,CAAC,EAC5BA,GAAOmW,GAEXH,EAAiBC,EAAiB,CACrC,CACJ,KACE,CAEH,QADIG,EAAI,IAAI,MAAMN,CAAM,EACfjV,EAAI,EAAGA,EAAIiV,EAAQ,EAAEjV,EAC1BuV,EAAEvV,GAAK,OAAO,aAAaN,EAAOwV,EAAUlV,EAAE,EAElDb,EAAMoW,EAAE,KAAK,EAAE,CAClB,CACD,OAAA9F,EAAMnL,CAAK,EACJnF,CACV,EACD,WAAc,SAASmJ,EAAahE,EAAO,CACnCA,aAAiB,cACjBA,EAAQ,IAAI,WAAWA,CAAK,GAEhC,IAAI2Q,EACAO,EAAsB,OAAOlR,GAAS,SACpCkR,GAAuBlR,aAAiB,YAAcA,aAAiB,mBAAqBA,aAAiB,WAC/G0C,EAAkB,uCAAuC,EAEzDgO,GAAmBQ,EACnBP,EAAS7U,GAAgBkE,CAAK,EAE9B2Q,EAAS3Q,EAAM,OAEnB,IAAIkM,EAAO1M,GAAQ,EAAImR,EAAS,CAAC,EAC7BxV,EAAM+Q,EAAO,EAEjB,GADA5P,EAAQ4P,GAAQ,GAAKyE,EACjBD,GAAmBQ,EACnBtV,GAAaoE,EAAO7E,EAAKwV,EAAS,CAAC,UAE/BO,EACA,QAASxV,EAAI,EAAGA,EAAIiV,EAAQ,EAAEjV,EAAG,CAC7B,IAAIyV,EAAWnR,EAAM,WAAWtE,CAAC,EAC7ByV,EAAW,MACXhG,EAAMhQ,CAAG,EACTuH,EAAkB,wDAAwD,GAE9EtH,EAAOD,EAAMO,GAAKyV,CACrB,KAED,SAASzV,EAAI,EAAGA,EAAIiV,EAAQ,EAAEjV,EAC1BN,EAAOD,EAAMO,GAAKsE,EAAMtE,GAIpC,OAAIsI,IAAgB,MAChBA,EAAY,KAAKmH,EAAOe,CAAI,EAEzBA,CACV,EACD,eAAkB,EAClB,qBAAwBjD,GACxB,mBAAoB,SAAS9N,EAAK,CAC9BgQ,EAAMhQ,CAAG,CACZ,CACT,CAAK,CACL,CACA,IAAIiW,GAAe,OAAO,aAAe,YAAc,IAAI,YAAY,UAAU,EAAI,OAErF,SAASC,GAAclW,EAAKT,EAAgB,CAIxC,QAHIE,EAASO,EACTV,EAAMG,GAAU,EAChB0W,EAAS7W,EAAMC,EAAiB,EAC7B,EAAED,GAAO6W,IAAWlV,GAAQ3B,IAAM,EAAEA,EAE3C,GADAG,EAASH,GAAO,EACZG,EAASO,EAAM,IAAMiW,GAAc,OAAOA,GAAa,OAAOhW,EAAO,SAASD,EAAKP,CAAM,CAAC,EAE9F,QADIC,EAAM,GACDa,EAAI,EAAG,EAAEA,GAAKhB,EAAiB,GAAI,EAAEgB,EAAG,CAC7C,IAAI6V,EAAWpV,EAAOhB,EAAMO,EAAI,GAAK,GACrC,GAAI6V,GAAY,EAAG,MACnB1W,GAAO,OAAO,aAAa0W,CAAQ,CACtC,CACD,OAAO1W,CACX,CAEA,SAAS2W,GAAc3W,EAAKgB,EAAQL,EAAiB,CAIjD,GAHIA,IAAoB,SACpBA,EAAkB,YAElBA,EAAkB,EAAG,MAAO,GAChCA,GAAmB,EAGnB,QAFIiW,EAAW5V,EACX6V,EAAkBlW,EAAkBX,EAAI,OAAS,EAAIW,EAAkB,EAAIX,EAAI,OAC1Ea,EAAI,EAAGA,EAAIgW,EAAiB,EAAEhW,EAAG,CACtC,IAAI6V,EAAW1W,EAAI,WAAWa,CAAC,EAC/BS,EAAON,GAAU,GAAK0V,EACtB1V,GAAU,CACb,CACD,OAAAM,EAAON,GAAU,GAAK,EACfA,EAAS4V,CACpB,CAEA,SAASE,GAAiB9W,EAAK,CAC3B,OAAOA,EAAI,OAAS,CACxB,CAEA,SAAS+W,GAAczW,EAAKT,EAAgB,CAGxC,QAFIgB,EAAI,EACJb,EAAM,GACH,EAAEa,GAAKhB,EAAiB,IAAI,CAC/B,IAAImX,EAAQxV,EAAOlB,EAAMO,EAAI,GAAK,GAClC,GAAImW,GAAS,EAAG,MAEhB,GADA,EAAEnW,EACEmW,GAAS,MAAO,CAChB,IAAI5W,EAAK4W,EAAQ,MACjBhX,GAAO,OAAO,aAAa,MAAQI,GAAM,GAAI,MAAQA,EAAK,IAAI,CAC1E,MACYJ,GAAO,OAAO,aAAagX,CAAK,CAEvC,CACD,OAAOhX,CACX,CAEA,SAASiX,GAAcjX,EAAKgB,EAAQL,EAAiB,CAIjD,GAHIA,IAAoB,SACpBA,EAAkB,YAElBA,EAAkB,EAAG,MAAO,GAGhC,QAFIiW,EAAW5V,EACXjB,EAAS6W,EAAWjW,EAAkB,EACjCE,EAAI,EAAGA,EAAIb,EAAI,OAAQ,EAAEa,EAAG,CACjC,IAAI6V,EAAW1W,EAAI,WAAWa,CAAC,EAC/B,GAAI6V,GAAY,OAASA,GAAY,MAAO,CACxC,IAAIQ,EAAiBlX,EAAI,WAAW,EAAEa,CAAC,EACvC6V,EAAW,QAAUA,EAAW,OAAS,IAAMQ,EAAiB,IACnE,CAGD,GAFA1V,EAAOR,GAAU,GAAK0V,EACtB1V,GAAU,EACNA,EAAS,EAAIjB,EAAQ,KAC5B,CACD,OAAAyB,EAAOR,GAAU,GAAK,EACfA,EAAS4V,CACpB,CAEA,SAASO,GAAiBnX,EAAK,CAE3B,QADIkB,EAAM,EACDL,EAAI,EAAGA,EAAIb,EAAI,OAAQ,EAAEa,EAAG,CACjC,IAAI6V,EAAW1W,EAAI,WAAWa,CAAC,EAC3B6V,GAAY,OAASA,GAAY,OAAO,EAAE7V,EAC9CK,GAAO,CACV,CACD,OAAOA,CACX,CAEA,SAASkW,GAA8BzO,EAAS0O,EAAUjR,EAAM,CAC5DA,EAAOO,EAAiBP,CAAI,EAC5B,IAAIkR,EAAcC,EAAcC,EAASC,EAAgBxO,EACrDoO,IAAa,GACbC,EAAed,GACfe,EAAeZ,GACfc,EAAiBX,GACjBU,EAAU,IAAMjW,GAChB0H,EAAQ,GACDoO,IAAa,IACpBC,EAAeP,GACfQ,EAAeN,GACfQ,EAAiBN,GACjBK,EAAU,IAAM/V,EAChBwH,EAAQ,GAEZV,EAAaI,EAAS,CAClB,KAAMvC,EACN,aAAgB,SAASjB,EAAO,CAK5B,QAJI2Q,EAASrU,EAAQ0D,GAAS,GAC1BuS,EAAOF,IACPxX,EACAgW,EAAiB7Q,EAAQ,EACpBtE,EAAI,EAAGA,GAAKiV,EAAQ,EAAEjV,EAAG,CAC9B,IAAIoV,EAAiB9Q,EAAQ,EAAItE,EAAIwW,EACrC,GAAIxW,GAAKiV,GAAU4B,EAAKzB,GAAkBhN,IAAU,EAAG,CACnD,IAAI0O,EAAe1B,EAAiBD,EAChCG,EAAgBmB,EAAatB,EAAgB2B,CAAY,EACzD3X,IAAQ,OACRA,EAAMmW,GAENnW,GAAO,OAAO,aAAa,CAAC,EAC5BA,GAAOmW,GAEXH,EAAiBC,EAAiBoB,CACrC,CACJ,CACD,OAAA/G,EAAMnL,CAAK,EACJnF,CACV,EACD,WAAc,SAASmJ,EAAahE,EAAO,CACjC,OAAOA,GAAS,UAClB0C,EAAkB,6CAA+CzB,CAAI,EAEzE,IAAI0P,EAAS2B,EAAetS,CAAK,EAC7B7E,EAAMqE,GAAQ,EAAImR,EAASuB,CAAQ,EACvC,OAAA5V,EAAQnB,GAAO,GAAKwV,GAAU7M,EAC9BsO,EAAapS,EAAO7E,EAAM,EAAGwV,EAASuB,CAAQ,EAC1ClO,IAAgB,MAChBA,EAAY,KAAKmH,EAAOhQ,CAAG,EAExBA,CACV,EACD,eAAkB,EAClB,qBAAwB8N,GACxB,mBAAoB,SAAS9N,EAAK,CAC9BgQ,EAAMhQ,CAAG,CACZ,CACT,CAAK,CACL,CAEA,SAASsX,GAAuBjP,EAASvC,EAAM,CAC3CA,EAAOO,EAAiBP,CAAI,EAC5BmC,EAAaI,EAAS,CAClB,OAAQ,GACR,KAAMvC,EACN,eAAkB,EAClB,aAAgB,UAAW,CAE1B,EACD,WAAc,SAAS+C,EAAaC,EAAG,CAEtC,CACT,CAAK,CACL,CAEA,SAASyO,IAA6B,CAClC,KAAM,IACV,CAEA,SAASC,GAAe7N,EAAQ,CACxBA,EAAS,IACTkK,EAAmBlK,GAAQ,UAAY,EAE/C,CAEA,SAAS8N,GAAsBpP,EAASqE,EAAW,CAC/C,IAAIgL,EAAOlR,EAAgB6B,GAC3B,OAAkBqP,IAAd,QACAnQ,EAAkBmF,EAAY,qBAAuBoD,GAAYzH,CAAO,CAAC,EAEtEqP,CACX,CAEA,SAASC,GAAmBnT,EAAMoT,EAAK,CACnCpT,EAAOiT,GAAsBjT,EAAM,mBAAmB,EACtD,IAAI2P,EAAI3P,EAAK,qBAAwBoT,CAAG,EACxC,OAAOhK,GAAM,SAASuG,CAAC,CAC3B,CAEA,SAAS0D,IAAS,CACdhZ,EAAM,EAAE,CACZ,CAEA,SAASiZ,GAAuBC,EAAMC,EAAKC,EAAK,CAC5ChY,EAAO,WAAW8X,EAAMC,EAAKA,EAAMC,CAAG,CAC1C,CAEA,SAASC,IAAa,CAClB,MAAO,WACX,CAEA,SAASC,GAA0B/T,EAAM,CACrC,GAAI,CACA,OAAAtF,GAAW,KAAKsF,EAAOtD,GAAO,WAAa,QAAU,EAAE,EACvDQ,GAA2BxC,GAAW,MAAM,EACrC,CACf,OAAa,EAAP,CAAY,CAClB,CAEA,SAASsZ,GAAwBC,EAAe,CAC5C,IAAIC,EAAUrY,EAAO,OACrBoY,EAAgBA,IAAkB,EAClC,IAAIE,EAAcL,KAClB,GAAIG,EAAgBE,EAChB,MAAO,GAEX,IAAIC,EAAU,CAACC,EAAGC,IAAaD,GAAKC,EAAWD,EAAIC,GAAYA,EAC/D,QAASC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAC9C,IAAIC,EAAoBN,GAAW,EAAI,GAAKK,GAC5CC,EAAoB,KAAK,IAAIA,EAAmBP,EAAgB,SAAS,EACzE,IAAIQ,EAAU,KAAK,IAAIN,EAAaC,EAAQ,KAAK,IAAIH,EAAeO,CAAiB,EAAG,KAAK,CAAC,EAC1FE,EAAcX,GAA0BU,CAAO,EACnD,GAAIC,EACA,MAAO,EAEd,CACD,MAAO,EACX,CACA,IAAIC,GAAM,CAAA,EAEV,SAASC,IAAoB,CACzB,OAAO7a,EACX,CAEA,SAAS8a,GAAgB,CACrB,GAAI,CAACA,EAAc,QAAS,CACxB,IAAIC,GAAQ,OAAO,WAAa,UAAY,UAAU,WAAa,UAAU,UAAU,IAAM,KAAK,QAAQ,IAAK,GAAG,EAAI,SAClHC,EAAM,CACN,KAAQ,WACR,QAAW,WACX,KAAQ,IACR,IAAO,IACP,KAAQ,iBACR,KAAQD,EACR,EAAKF,GAAmB,CACpC,EACQ,QAASP,KAAKM,GACNA,GAAIN,KAAO,OAAW,OAAOU,EAAIV,GAChCU,EAAIV,GAAKM,GAAIN,GAEtB,IAAIW,EAAU,CAAA,EACd,QAASX,KAAKU,EACVC,EAAQ,KAAKX,EAAI,IAAMU,EAAIV,EAAE,EAEjCQ,EAAc,QAAUG,CAC3B,CACD,OAAOH,EAAc,OACzB,CAEA,SAASI,GAAmB3Z,EAAKoB,EAAQwY,EAAa,CAClD,QAAS/Y,EAAI,EAAGA,EAAIb,EAAI,OAAQ,EAAEa,EAC9BQ,EAAMD,KAAY,GAAKpB,EAAI,WAAWa,CAAC,EAEtC+Y,IAAavY,EAAMD,GAAU,GAAK,EAC3C,CAEA,SAASyY,GAAaC,EAAWC,EAAa,CAC1C,IAAIC,EAAU,EACd,OAAAT,IAAgB,QAAQ,SAASU,EAAQ,EAAG,CACxC,IAAI3Z,EAAMyZ,EAAcC,EACxBvY,EAAQqY,EAAY,EAAI,GAAK,GAAKxZ,EAClCqZ,GAAmBM,EAAQ3Z,CAAG,EAC9B0Z,GAAWC,EAAO,OAAS,CACnC,CAAK,EACM,CACX,CAEA,SAASC,GAAmBC,EAAgBC,EAAmB,CAC3D,IAAIV,EAAUH,IACd9X,EAAQ0Y,GAAkB,GAAKT,EAAQ,OACvC,IAAIM,EAAU,EACd,OAAAN,EAAQ,QAAQ,SAASO,EAAQ,CAC7BD,GAAWC,EAAO,OAAS,CACnC,CAAK,EACDxY,EAAQ2Y,GAAqB,GAAKJ,EAC3B,CACX,CAEA,SAASK,GAAU1U,EAAI,CACnB,MAAO,GACX,CAEA,SAAS2U,GAAS3U,EAAI4U,EAAKC,EAAQC,EAAM,CACrC,MAAO,GACX,CAEA,SAASC,GAAS/U,EAAIgV,EAAYC,EAAaC,EAAQC,EAAW,CAC9D,MAAO,GACX,CACA,IAAIC,GAAmB,CAAC,KAAM,CAAE,EAC5B,CAAE,CACN,EAEA,SAASC,GAAUC,EAAQC,EAAM,CAC7B,IAAI9Z,EAAS2Z,GAAiBE,GAC1BC,IAAS,GAAKA,IAAS,KACtBD,IAAW,EAAIjc,GAAMC,GAAKS,GAAkB0B,EAAQ,CAAC,CAAC,EACvDA,EAAO,OAAS,GAEhBA,EAAO,KAAK8Z,CAAI,CAExB,CAEA,SAASC,GAAUxV,EAAI4U,EAAKC,EAAQC,EAAM,CAEtC,QADIlC,EAAM,EACD1X,EAAI,EAAGA,EAAI2Z,EAAQ3Z,IAAK,CAC7B,IAAIP,EAAMmB,EAAQ8Y,GAAO,GACrBrZ,EAAMO,EAAQ8Y,EAAM,GAAK,GAC7BA,GAAO,EACP,QAASa,EAAI,EAAGA,EAAIla,EAAKka,IACrBJ,GAAUrV,EAAIpF,EAAOD,EAAM8a,EAAE,EAEjC7C,GAAOrX,CACV,CACD,OAAAO,EAAQgZ,GAAQ,GAAKlC,EACd,CACX,CAEA,SAAS8C,GAAYC,EAAGC,EAASC,EAAQC,EAAIC,EAAK,CAE9C,MAAO,EAEX,CACAlV,KACAoB,EAAerJ,EAAO,aAAkB+I,GAAY,MAAO,cAAc,EACzEQ,GAAgBvJ,EAAO,cAAmB+I,GAAY,MAAO,eAAe,EAC5EsF,KACAtB,KACAkD,KACA2B,GAAmB5R,EAAO,iBAAsB+I,GAAY,MAAO,kBAAkB,EACrFiN,KACA,IAAI9Q,GAAgB,CAChB,cAAiBa,GACjB,yBAA4BG,GAC5B,YAAegB,GACf,gBAAmBC,GACnB,iBAAoBI,GACpB,wBAA2BI,GAC3B,sBAAyB4C,GACzB,uBAA0B8H,GAC1B,mCAAsCyC,GACtC,gCAAmCM,GACnC,uBAA0Ba,GAC1B,uBAA0BI,GAC1B,yBAA4BG,GAC5B,6BAAgCO,GAChC,4BAA+BM,GAC/B,6BAAgCwB,GAChC,sBAAyBQ,GACzB,0BAA6BC,GAC7B,cAAiBzD,GACjB,cAAiB0D,GACjB,kBAAqBG,GACrB,MAASE,GACT,sBAAyBC,GACzB,uBAA0BM,GAC1B,YAAemB,GACf,kBAAqBK,GACrB,SAAYG,GACZ,QAAWC,GACX,QAAWI,GACX,SAAYS,GACZ,UAAaQ,GACb,YAAeC,GACf,aAAgBC,GAChB,cAAiBC,GACjB,WAAcT,EAClB,EACA9X,KACA,IAAI+M,EAAQ/R,EAAO,MAAW,UAAW,CACrC,OAAQ+R,EAAQ/R,EAAO,MAAWA,EAAO,IAAO,MAAS,MAAM,KAAM,SAAS,CAClF,EACIoG,GAAUpG,EAAO,QAAa,UAAW,CACzC,OAAQoG,GAAUpG,EAAO,QAAaA,EAAO,IAAO,QAAW,MAAM,KAAM,SAAS,CACxF,EACI8R,GAAiB9R,EAAO,eAAoB,UAAW,CACvD,OAAQ8R,GAAiB9R,EAAO,eAAoBA,EAAO,IAAO,eAAkB,MAAM,KAAM,SAAS,CAC7G,EACmCA,EAAO,6BAAkC,UAAW,CACnF,OAAuCA,EAAO,6BAAkCA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACvJ,EACwBA,EAAO,kBAAuB,UAAW,CAC7D,OAA4BA,EAAO,kBAAuBA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CACtH,EACA,IAAIwd,EAAYxd,EAAO,UAAe,UAAW,CAC7C,OAAQwd,EAAYxd,EAAO,UAAeA,EAAO,IAAO,UAAa,MAAM,KAAM,SAAS,CAC9F,EACkBA,EAAO,YAAiB,UAAW,CACjD,OAAsBA,EAAO,YAAiBA,EAAO,IAAO,YAAe,MAAM,KAAM,SAAS,CACpG,EACA,IAAIyd,EAAYzd,EAAO,UAAe,UAAW,CAC7C,OAAQyd,EAAYzd,EAAO,UAAeA,EAAO,IAAO,WAAc,MAAM,KAAM,SAAS,CAC/F,EACI0d,EAAe1d,EAAO,aAAkB,UAAW,CACnD,OAAQ0d,EAAe1d,EAAO,aAAkBA,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CACxG,EACiBA,EAAO,WAAgB,UAAW,CAC/C,OAAqBA,EAAO,WAAgBA,EAAO,IAAO,YAAe,MAAM,KAAM,SAAS,CAClG,EACA,IAAIgH,GAAyBhH,EAAO,uBAA4B,UAAW,CACvE,OAAQgH,GAAyBhH,EAAO,uBAA4BA,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CACrI,EACmBA,EAAO,aAAkB,UAAW,CACnD,OAAuBA,EAAO,aAAkBA,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CACxG,EACqBA,EAAO,eAAoB,UAAW,CACvD,OAAyBA,EAAO,eAAoBA,EAAO,IAAO,gBAAmB,MAAM,KAAM,SAAS,CAC9G,EACqBA,EAAO,eAAoB,UAAW,CACvD,OAAyBA,EAAO,eAAoBA,EAAO,IAAO,gBAAmB,MAAM,KAAM,SAAS,CAC9G,EACsBA,EAAO,gBAAqB,UAAW,CACzD,OAA0BA,EAAO,gBAAqBA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CACjH,EACuBA,EAAO,iBAAsB,UAAW,CAC3D,OAA2BA,EAAO,iBAAsBA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CACpH,EAEA,SAASod,GAAUO,EAAOC,EAAI,CAC1B,IAAIC,EAAKJ,IACT,GAAI,CACAxM,EAAkB0M,CAAK,EAAEC,CAAE,CAC9B,OAAQE,EAAP,CAEE,GADAJ,EAAaG,CAAE,EACXC,IAAMA,EAAI,EAAG,MAAMA,EACvBN,EAAU,EAAG,CAAC,CACjB,CACL,CAEA,SAASH,GAAYM,EAAOC,EAAIG,EAAIC,EAAI,CACpC,IAAIH,EAAKJ,IACT,GAAI,CACAxM,EAAkB0M,CAAK,EAAEC,EAAIG,EAAIC,CAAE,CACtC,OAAQF,EAAP,CAEE,GADAJ,EAAaG,CAAE,EACXC,IAAMA,EAAI,EAAG,MAAMA,EACvBN,EAAU,EAAG,CAAC,CACjB,CACL,CAEA,SAASF,GAAaK,EAAOC,EAAIG,EAAIC,EAAIC,EAAI,CACzC,IAAIJ,EAAKJ,IACT,GAAI,CACAxM,EAAkB0M,CAAK,EAAEC,EAAIG,EAAIC,EAAIC,CAAE,CAC1C,OAAQH,EAAP,CAEE,GADAJ,EAAaG,CAAE,EACXC,IAAMA,EAAI,EAAG,MAAMA,EACvBN,EAAU,EAAG,CAAC,CACjB,CACL,CAEA,SAASD,GAAcI,EAAOC,EAAIG,EAAIC,EAAIC,EAAIC,EAAI,CAC9C,IAAIL,EAAKJ,IACT,GAAI,CACAxM,EAAkB0M,CAAK,EAAEC,EAAIG,EAAIC,EAAIC,EAAIC,CAAE,CAC9C,OAAQJ,EAAP,CAEE,GADAJ,EAAaG,CAAE,EACXC,IAAMA,EAAI,EAAG,MAAMA,EACvBN,EAAU,EAAG,CAAC,CACjB,CACL,CACA,IAAIW,GACJja,EAAwB,SAASka,GAAY,CACpCD,IAAWE,KACXF,KAAWja,EAAwBka,EAC5C,EAEA,IAAIE,GACJ,MAAMC,GAAa,IAAI,QAAQC,GAAWF,GAAqBE,CAAO,EAEtE,SAASH,GAAItN,EAAM,CAMf,GAJI9M,EAAkB,IAGtBN,KACIM,EAAkB,GAClB,OAGJ,SAASwa,GAAQ,CACTN,KACJA,GAAY,GACZne,EAAO,UAAe,GAClB,CAAAc,KACJ+C,KACAC,GAAS,EACTwa,GAAmBte,CAAM,GAC5B,CACDye,EAAO,CACX,CAEAJ,GAAK,ECnqEL,MAAMK,MAAgB,IACtB,IAAIC,GAEJ,MAAMC,EAAoB,CAOtB,YAAYtU,EAA8B,CANnCuU,EAAA,WACAA,EAAA,mBAAc,GACdA,EAAA,iBAAY,GACZA,EAAA,gBAAW,IACVA,EAAA,cAA6B,MAGjC,KAAK,GAAKvU,EAAQ,GAClB,KAAK,OAAS,IAAIqU,GAAQrU,EAAQ,IAAI,EACjC,KAAA,YAAc,KAAK,OAAO,OAAO,EACjC,KAAA,UAAY,KAAK,OAAO,UAAU,CAC3C,CAOA,OAAOwU,EAAeC,EAAeC,EAAoC,CAC/D,KAAA,CAAE,OAAAC,EAAQ,YAAAC,CAAgB,EAAA,KAChC,GAAID,GAAUH,GAAS,GAAKA,EAAQI,EAAa,CAC7C,MAAM9H,EAAO6H,EAAO,OAAOH,EAAOC,EAAOC,CAAM,EAU/C,OAAOG,GAAW/H,CAAI,CAC1B,CACJ,CAEA,SAAU,CF3Cd,IAAAgI,EAAAC,GE6CQA,GAAAD,EAAA,KAAK,SAAL,YAAAA,EAAa,SAAb,MAAAC,EAAA,KAAAD,GACA,KAAK,OAAS,KACd,KAAK,SAAW,EACpB,CACJ,CAEA,SAASE,GAAOhV,EAA8B,CACpC,KAAA,CAAE,GAAAlG,CAAO,EAAAkG,EACX,IAAAlF,EAAWsZ,EAAU,IAAIta,CAAE,EAC/B,OAAKgB,IACUA,EAAA,IAAIwZ,GAAoBtU,CAAO,EAChCoU,EAAA,IAAIta,EAAIgB,CAAQ,GAGvBA,CACX,CAEA,SAASma,GAAQnb,EAAQ,CACf,MAAAgB,EAAWsZ,EAAU,IAAIta,CAAE,EAC7BgB,IACAsZ,EAAU,OAAOta,CAAE,EACnBgB,EAAS,QAAQ,EAEzB,CAKA,SAASoa,GAAOhI,EAAyB,CACrC,MAAMiI,EAA0B,CAAA,EAChC,OAAAjI,EAAQ,QAAekI,GAAA,CACf,GAAA,CACA,MAAMta,EAAWsZ,EAAU,IAAIgB,EAAI,EAAE,EAC/BtI,EAAOhS,GAAA,YAAAA,EAAU,OAAOsa,EAAI,MAAOA,EAAI,MAAOA,EAAI,QACpDtI,GACAqI,EAAO,KAAK,CAAE,GAAGC,EAAK,KAAAtI,CAAM,CAAA,CAChC,OACF0G,EAAA,CAAO,CAAA,CACZ,EAEM2B,CACX,CAEA,KAAK,iBAAiB,UAAYE,GAAqC,CACnE,KAAM,CAAE,IAAAC,EAAK,KAAA/X,EAAM,QAAA2P,CAAA,EAAYmI,EAAI,KAEnC,OAAQ9X,EAAM,CACV,IAAK,SACK,MAAAzC,EAAWka,GAAO9H,CAAO,EAC/BqI,GAAQD,EAAK/X,EAAM,CACf,YAAazC,EAAS,YACtB,UAAWA,EAAS,SAAA,CACvB,EACD,MACJ,IAAK,UACDma,GAAQ/H,EAAQ,EAAE,EAClBqI,GAAQD,EAAK/X,EAAM,CAAE,GAAI,EAAM,CAAA,EAC/B,MACJ,IAAK,SACK,MAAA4X,EAASD,GAAOhI,EAAQ,MAAM,EAC5BqI,GAAAD,EAAK/X,EAAM,CAAE,OAAA4X,CAAO,EAAGA,EAAO,IAAI7W,GAAKA,EAAE,IAAI,CAAC,EACtD,KACR,CACJ,CAAC,EAKD,SAASuW,GAAWpF,EAA8B,CAC9C,MAAM+F,EAAM,IAAI,YAAY/F,EAAI,UAAU,EAC1C,WAAI,WAAW+F,CAAG,EAAE,IAAI/F,CAAG,EACpB+F,CACX,CAKA,SAASD,GAAoCD,EAAa/X,EAAS2P,EAA2BuI,EAAoB,CAC9G,KAAK,YAAY,CAAE,IAAAH,EAAK,KAAA/X,EAAM,QAAA2P,CAAA,EAAWuI,CAAY,CACzD,CAEAC,GAAa,KAAK,CAAC,CAAE,YAAAC,KAAkB,CACzBtB,GAAAsB,EAEV,KAAK,YAAY,CAAE,KAAM,MAAQ,CAAA,CACrC,CAAC"}